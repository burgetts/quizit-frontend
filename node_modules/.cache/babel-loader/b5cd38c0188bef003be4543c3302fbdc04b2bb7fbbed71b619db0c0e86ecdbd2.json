{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PublicGroups = () => {\n  _s();\n  const {\n    request\n  } = useContext(UserContext);\n  const [groups, setGroups] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showingGroups, setShowingGroups] = useState([]);\n  useEffect(() => {\n    const getPublicGroups = async () => {\n      console.log('hi!');\n      const resp = await request(`groups`);\n      setGroups(resp.groups);\n    };\n    getPublicGroups();\n  }, []);\n  useEffect(() => {\n    if (groups) {\n      const groupsToShow = groups.filter(s => s.name.toLowerCase().startsWith(searchTerm.toLowerCase()));\n      setShowingGroups(groupsToShow);\n    }\n  }, [searchTerm]);\n  return (\n    /*#__PURE__*/\n    // SEARCH BAR\n    // MAP PUBLIC GROUPS\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        text: \"Search groups by name\",\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), groups ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showingGroups.map(g => /*#__PURE__*/_jsxDEV(GroupCard, {\n          group: g\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(PublicGroups, \"SrNVEq9tckGiYuUDF/HuoZtLUOE=\");\n_c = PublicGroups;\nexport default PublicGroups;\nvar _c;\n$RefreshReg$(_c, \"PublicGroups\");","map":{"version":3,"names":["React","useEffect","useContext","useState","UserContext","GroupCard","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","PublicGroups","_s","request","groups","setGroups","searchTerm","setSearchTerm","showingGroups","setShowingGroups","getPublicGroups","console","log","resp","groupsToShow","filter","s","name","toLowerCase","startsWith","children","text","fileName","_jsxFileName","lineNumber","columnNumber","map","g","group","id","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\nimport Search from './Search';\n\nconst PublicGroups = () => {\n    const { request } = useContext(UserContext)\n    const [groups, setGroups] = useState()\n    const [searchTerm, setSearchTerm] = useState('')\n    const [showingGroups, setShowingGroups] = useState([])\n\n    useEffect(() => {\n        const getPublicGroups = async () => {\n            console.log('hi!')\n            const resp = await request(`groups`)\n            setGroups(resp.groups)\n        }\n        getPublicGroups()\n    }, [])\n\n    useEffect(() => {\n        if (groups) {\n            const groupsToShow = groups.filter(s => s.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\n            setShowingGroups(groupsToShow)\n        }\n    }, [searchTerm])\n    return (\n        // SEARCH BAR\n\n        // MAP PUBLIC GROUPS\n        <>  \n            <Search text=\"Search groups by name\" setSearchTerm={setSearchTerm} />\n            {groups \n                    ?\n                    <div>\n                        {showingGroups.map(g => <GroupCard group={g} key={g.id} />)}\n                    </div>\n\n                    : \n                    <h1>Loading...</h1>\n            }\n        </>\n    )\n}\n\nexport default PublicGroups;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,EAAE;EACtC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtDF,SAAS,CAAC,MAAM;IACZ,MAAMmB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAAE,QAAO,CAAC;MACpCE,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC;IAC1B,CAAC;IACDM,eAAe,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAM,EAAE;MACR,MAAMU,YAAY,GAAGV,MAAM,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,UAAU,CAACb,UAAU,CAACY,WAAW,EAAE,CAAC,CAAC;MAClGT,gBAAgB,CAACK,YAAY,CAAC;IAClC;EACJ,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAChB;IAAA;IACI;IAEA;IACAR,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACItB,OAAA,CAACF,MAAM;QAACyB,IAAI,EAAC,uBAAuB;QAACd,aAAa,EAAEA;MAAc;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACpErB,MAAM,gBAECN,OAAA;QAAAsB,QAAA,EACKZ,aAAa,CAACkB,GAAG,CAACC,CAAC,iBAAI7B,OAAA,CAACH,SAAS;UAACiC,KAAK,EAAED;QAAE,GAAMA,CAAC,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzD,gBAGN3B,OAAA;QAAAsB,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;EAE5B;AAEX,CAAC;AAAAvB,EAAA,CAtCKD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}