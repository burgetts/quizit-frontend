{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport SetEditCard from './SetEditCard';\nimport NewFlashcardForm from './NewFlashcardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = _ref => {\n  _s();\n  let {\n    forGroup = false\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const {\n    request,\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [set, setSet] = useState(null);\n  const [flashcards, setFlashcards] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [newFlashcards, setNewFlashcards] = useState([]);\n  const [owner, setOwner] = useState();\n  const navigate = useNavigate();\n\n  // get set data on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(resp.set.flashcards);\n      setOwner(resp.set.createdBy === currentUser.username);\n    };\n    getSet();\n  }, [editMode]);\n  const toggleEditMode = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  };\n  const deleteSet = async () => {\n    await request(`sets/${id}`, {}, 'delete');\n    const user = await request(`users/${currentUser.username}`);\n    setCurrentUser(user.user);\n    navigate(`/flashcards`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [set ? !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Set\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-name\",\n          children: set.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-description\",\n          children: set.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), set.createdBy === currentUser.username || forGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Set-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleEditMode(editMode),\n            children: \"Edit Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: deleteSet,\n            children: \"Delete Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(SetEditCard, {\n      set: set,\n      toggleEditMode: toggleEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Set-h1\",\n      children: \" Loading set... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flashcard-container\",\n      children: flashcards.map(f => /*#__PURE__*/_jsxDEV(SplitFlashcard, {\n        flashcard: f,\n        flashcards: flashcards,\n        sideOneName: set.sideOneName,\n        sideTwoName: set.sideTwoName,\n        setFlashcards: setFlashcards,\n        owner: owner\n      }, f.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Flashcards-h2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 49\n      }, this), \"No flashcards yet!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-practice\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/flashcards/sets/${id}/practice`,\n        children: \" Practice \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-practice\",\n      disabled: true,\n      children: \"Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), set && (owner || forGroup) ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-add-flashcard\",\n      onClick: () => setNewFlashcards([...newFlashcards, 1]),\n      children: \"Add Flashcard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 40\n    }, this) : '', newFlashcards.map(f => /*#__PURE__*/_jsxDEV(NewFlashcardForm, {\n      sideOneName: set.sideOneName,\n      sideTwoName: set.sideTwoName,\n      setFlashcards: setFlashcards,\n      setNewFlashcards: setNewFlashcards,\n      newFlashcards: newFlashcards,\n      setId: set.id,\n      flashcards: flashcards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true);\n};\n_s(Set, \"QLjc9nr7wHQ8ZR8dacW/xuijg8I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useNavigate","Link","UserContext","SplitFlashcard","SetEditCard","NewFlashcardForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_ref","_s","forGroup","id","request","currentUser","setCurrentUser","set","setSet","flashcards","setFlashcards","editMode","setEditMode","newFlashcards","setNewFlashcards","owner","setOwner","navigate","getSet","resp","createdBy","username","toggleEditMode","deleteSet","user","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","length","map","f","flashcard","sideOneName","sideTwoName","to","disabled","setId","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport SetEditCard from './SetEditCard';\nimport NewFlashcardForm from './NewFlashcardForm';\n\nconst Set =  ({forGroup=false}) => {\n    const { id } = useParams()\n    const { request, currentUser, setCurrentUser } = useContext(UserContext)\n    const [set, setSet] = useState(null)\n    const [flashcards, setFlashcards] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [newFlashcards, setNewFlashcards]= useState([])\n    const [owner, setOwner] = useState()\n\n    const navigate = useNavigate()\n\n    // get set data on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)\n            setFlashcards(resp.set.flashcards)\n            setOwner(resp.set.createdBy === currentUser.username)\n        }\n        getSet()\n        \n\n    }, [editMode])\n  \n    const toggleEditMode = () => {\n        editMode ? setEditMode(false) : setEditMode(true)\n    }\n   \n    const deleteSet = async () => {\n        await request(`sets/${id}`, {}, 'delete')\n        const user = await request(`users/${currentUser.username}`)\n        setCurrentUser(user.user)\n        navigate(`/flashcards`)\n    }\n\n\n    return (\n    <>\n        {set ? \n            !editMode ? \n                <div>\n                    <div className=\"Set\">\n                    <p className=\"Set-name\">{set.name}</p>\n                    <p className=\"Set-description\">{set.description}</p>\n                    {(set.createdBy === currentUser.username || forGroup) ? \n                        <div className=\"Set-buttons\">\n                            <button onClick={() => toggleEditMode(editMode)}>Edit Set</button>\n                            <button className=\"delete-button\" onClick={deleteSet}>Delete Set</button>\n                        </div>\n                    : '' }\n                    </div>\n                </div>\n            : \n                <SetEditCard set={set} toggleEditMode={toggleEditMode} />\n        : \n            <h1 className=\"Set-h1\"> Loading set... </h1> \n        }\n\n        { flashcards.length > 0 ? \n            <div className=\"Flashcard-container\">\n                {flashcards.map(f => <SplitFlashcard key={f.id} flashcard={f} flashcards={flashcards} sideOneName={set.sideOneName} sideTwoName={set.sideTwoName} setFlashcards={setFlashcards} owner={owner}/>)}\n            </div>\n        :  \n           <h2 className=\"Flashcards-h2\"> <br/> <br/>No flashcards yet!</h2>\n        }\n\n        {flashcards.length > 0 ? \n            <button className=\"Set-buttons-practice\"> \n                <Link to={`/flashcards/sets/${id}/practice`}> Practice </Link> \n            </button>\n        :\n        <button className=\"Set-buttons-practice\" disabled={true}>Practice</button> }\n        {set && (owner || forGroup)  ? <button className=\"Set-buttons-add-flashcard\" onClick={() => setNewFlashcards([...newFlashcards, 1])}>Add Flashcard</button> : ''}\n        {newFlashcards.map((f) => <NewFlashcardForm sideOneName={set.sideOneName} sideTwoName={set.sideTwoName} setFlashcards={setFlashcards} setNewFlashcards={setNewFlashcards} newFlashcards={newFlashcards} setId={set.id} flashcards={flashcards}/>)\n        }\n    </>\n        \n    )\n}\n\nexport default Set;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,GAAG,GAAIC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAACC,QAAQ,GAAC;EAAK,CAAC,GAAAF,IAAA;EAC1B,MAAM;IAAEG;EAAG,CAAC,GAAGf,SAAS,EAAE;EAC1B,MAAM;IAAEgB,OAAO;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGrB,UAAU,CAACM,WAAW,CAAC;EACxE,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAE3B,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,EAAE;EAEpC,MAAM8B,QAAQ,GAAG5B,WAAW,EAAE;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACZ,MAAMgC,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMC,IAAI,GAAG,MAAMf,OAAO,CAAE,QAAOD,EAAG,EAAC,CAAC;MACxCK,MAAM,CAACW,IAAI,CAACZ,GAAG,CAAC;MAChBG,aAAa,CAACS,IAAI,CAACZ,GAAG,CAACE,UAAU,CAAC;MAClCO,QAAQ,CAACG,IAAI,CAACZ,GAAG,CAACa,SAAS,KAAKf,WAAW,CAACgB,QAAQ,CAAC;IACzD,CAAC;IACDH,MAAM,EAAE;EAGZ,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMW,cAAc,GAAGA,CAAA,KAAM;IACzBX,QAAQ,GAAGC,WAAW,CAAC,KAAK,CAAC,GAAGA,WAAW,CAAC,IAAI,CAAC;EACrD,CAAC;EAED,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMnB,OAAO,CAAE,QAAOD,EAAG,EAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC;IACzC,MAAMqB,IAAI,GAAG,MAAMpB,OAAO,CAAE,SAAQC,WAAW,CAACgB,QAAS,EAAC,CAAC;IAC3Df,cAAc,CAACkB,IAAI,CAACA,IAAI,CAAC;IACzBP,QAAQ,CAAE,aAAY,CAAC;EAC3B,CAAC;EAGD,oBACArB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,GACKlB,GAAG,GACA,CAACI,QAAQ,gBACLf,OAAA;MAAA6B,QAAA,eACI7B,OAAA;QAAK8B,SAAS,EAAC,KAAK;QAAAD,QAAA,gBACpB7B,OAAA;UAAG8B,SAAS,EAAC,UAAU;UAAAD,QAAA,EAAElB,GAAG,CAACoB;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACtCnC,OAAA;UAAG8B,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAElB,GAAG,CAACyB;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EAClDxB,GAAG,CAACa,SAAS,KAAKf,WAAW,CAACgB,QAAQ,IAAInB,QAAQ,gBAChDN,OAAA;UAAK8B,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxB7B,OAAA;YAAQqC,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACX,QAAQ,CAAE;YAAAc,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAClEnC,OAAA;YAAQ8B,SAAS,EAAC,eAAe;YAACO,OAAO,EAAEV,SAAU;YAAAE,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvE,GACR,EAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,gBAENnC,OAAA,CAACH,WAAW;MAACc,GAAG,EAAEA,GAAI;MAACe,cAAc,EAAEA;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAE7DnC,OAAA;MAAI8B,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAG9CtB,UAAU,CAACyB,MAAM,GAAG,CAAC,gBACnBtC,OAAA;MAAK8B,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EAC/BhB,UAAU,CAAC0B,GAAG,CAACC,CAAC,iBAAIxC,OAAA,CAACJ,cAAc;QAAY6C,SAAS,EAAED,CAAE;QAAC3B,UAAU,EAAEA,UAAW;QAAC6B,WAAW,EAAE/B,GAAG,CAAC+B,WAAY;QAACC,WAAW,EAAEhC,GAAG,CAACgC,WAAY;QAAC7B,aAAa,EAAEA,aAAc;QAACK,KAAK,EAAEA;MAAM,GAAnJqB,CAAC,CAACjC,EAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAiJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9L,gBAEPnC,OAAA;MAAI8B,SAAS,EAAC,eAAe;MAAAD,QAAA,GAAC,GAAC,eAAA7B,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,KAAC,eAAAnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,sBAAkB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAGnEtB,UAAU,CAACyB,MAAM,GAAG,CAAC,gBAClBtC,OAAA;MAAQ8B,SAAS,EAAC,sBAAsB;MAAAD,QAAA,eACpC7B,OAAA,CAACN,IAAI;QAACkD,EAAE,EAAG,oBAAmBrC,EAAG,WAAW;QAAAsB,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,gBAEbnC,OAAA;MAAQ8B,SAAS,EAAC,sBAAsB;MAACe,QAAQ,EAAE,IAAK;MAAAhB,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACzExB,GAAG,KAAKQ,KAAK,IAAIb,QAAQ,CAAC,gBAAIN,OAAA;MAAQ8B,SAAS,EAAC,2BAA2B;MAACO,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE,CAAC,CAAC,CAAE;MAAAY,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,GAAG,EAAE,EAC/JlB,aAAa,CAACsB,GAAG,CAAEC,CAAC,iBAAKxC,OAAA,CAACF,gBAAgB;MAAC4C,WAAW,EAAE/B,GAAG,CAAC+B,WAAY;MAACC,WAAW,EAAEhC,GAAG,CAACgC,WAAY;MAAC7B,aAAa,EAAEA,aAAc;MAACI,gBAAgB,EAAEA,gBAAiB;MAACD,aAAa,EAAEA,aAAc;MAAC6B,KAAK,EAAEnC,GAAG,CAACJ,EAAG;MAACM,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,CAAC;EAAA,gBAElP;AAGP,CAAC;AAAA9B,EAAA,CA9EKF,GAAG;EAAA,QACUX,SAAS,EAQPC,WAAW;AAAA;AAAAsD,EAAA,GAT1B5C,GAAG;AAgFT,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}