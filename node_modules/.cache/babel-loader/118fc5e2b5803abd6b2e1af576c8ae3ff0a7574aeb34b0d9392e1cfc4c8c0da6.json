{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupSets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport NavLink from 'react-router-dom';\nimport SetCard from './SetCard';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupSets = _ref => {\n  _s();\n  let {\n    groupId\n  } = _ref;\n  const [sets, setSets] = useState();\n  const {\n    request\n  } = useContext(UserContext);\n  useEffect(() => {\n    const getSets = async () => {\n      const resp = await request(`groups/${groupId}/sets`);\n      const groupSets = resp.sets;\n      setSets(groupSets);\n      console.log(resp.sets);\n    };\n    getSets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sets ? sets.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewSetCard\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/flashcards/sets/new\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"NewSetButton\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"NewSetText\",\n            children: \"Create a new set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), sets.map(s => /*#__PURE__*/_jsxDEV(SetCard, {\n        set: s\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No sets yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(GroupSets, \"MnwwTG1LYaTyONOvrkZuHJ+Dg30=\");\n_c = GroupSets;\nexport default GroupSets;\nvar _c;\n$RefreshReg$(_c, \"GroupSets\");","map":{"version":3,"names":["React","useState","useEffect","useContext","NavLink","SetCard","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupSets","_ref","_s","groupId","sets","setSets","request","getSets","resp","groupSets","console","log","children","length","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","s","set","id","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupSets.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport NavLink from 'react-router-dom';\nimport SetCard from './SetCard';\nimport UserContext from '../utils/UserContext';\nconst GroupSets = ({groupId}) => {\n    const [sets, setSets] = useState()\n    const { request } = useContext(UserContext)\n\n    useEffect(() => {\n        const getSets = async () => {\n            const resp = await request(`groups/${groupId}/sets`)\n            const groupSets = resp.sets\n            setSets(groupSets)\n            console.log(resp.sets)\n        }\n        getSets()\n    }, [])\n\n    return (\n        <>\n            {sets \n                ?\n                sets.length > 0\n                    ?\n                    <>\n                        <div className=\"NewSetCard\">\n                            <NavLink to=\"/flashcards/sets/new\">\n                                <button className=\"NewSetButton\">+</button>\n                                <p className=\"NewSetText\" >Create a new set</p>\n                            </NavLink>\n                        </div>\n                        {sets.map(s => <SetCard key={s.id} set={s} />)}\n                    </>\n                    :\n                    <h1>No sets yet!</h1>\n                :\n                <h1>Loading...</h1>\n            }\n        </>\n    )\n}\n\nexport default GroupSets;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/C,MAAMC,SAAS,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EACxB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,EAAE;EAClC,MAAM;IAAEgB;EAAQ,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC;EAE3CJ,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAAE,UAASH,OAAQ,OAAM,CAAC;MACpD,MAAMM,SAAS,GAAGD,IAAI,CAACJ,IAAI;MAC3BC,OAAO,CAACI,SAAS,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACJ,IAAI,CAAC;IAC1B,CAAC;IACDG,OAAO,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKR,IAAI,GAEDA,IAAI,CAACS,MAAM,GAAG,CAAC,gBAEXhB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA;QAAKiB,SAAS,EAAC,YAAY;QAAAF,QAAA,eACvBf,OAAA,CAACJ,OAAO;UAACsB,EAAE,EAAC,sBAAsB;UAAAH,QAAA,gBAC9Bf,OAAA;YAAQiB,SAAS,EAAC,cAAc;YAAAF,QAAA,EAAC;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAC3CtB,OAAA;YAAGiB,SAAS,EAAC,YAAY;YAAAF,QAAA,EAAE;UAAgB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACzC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,EACLf,IAAI,CAACgB,GAAG,CAACC,CAAC,iBAAIxB,OAAA,CAACH,OAAO;QAAY4B,GAAG,EAAED;MAAE,GAAbA,CAAC,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY,CAAC;IAAA,gBAC/C,gBAEHtB,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,gBAEzBtB,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBAExB;AAEX,CAAC;AAAAjB,EAAA,CApCKF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}