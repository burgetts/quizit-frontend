{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\nimport ReactCardFlip from \"react-card-flip\";\n\n// const FlashcardPractice = () => {\n//     const { id } = useParams()\n//     const { request } = useContext(UserContext)\n//     const [set, setSet] = useState()\n//     const [flashcards, setFlashcards] = useState([])\n//     const [currentFlashcard, setCurrentFlashcard] = useState(null)\n//     const [currentSide, setCurrentSide] = useState(1)\n\n//     // get set and flashcards on load\n//     useEffect(() => {\n//         const getSet = async () => {\n//             const resp = await request(`sets/${id}`)\n//             setSet(resp.set)  \n//             setFlashcards(resp.set.flashcards)\n//             if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0])\n//         }\n//         getSet()\n//     }, [])\n\n//     return (\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FlashcardPractice() {\n  _s();\n  const [flip, setFlip] = useState(false);\n  const {\n    id\n  } = useParams();\n  const {\n    request\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentFlashcard, setCurrentFlashcard] = useState(null);\n  const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\n\n  // get set and flashcards on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(resp.set.flashcards);\n      if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0]);\n    };\n    getSet();\n  }, []);\n  const nextCard = () => {\n    setCurrentFlashcard(flashcards[currentFlashcardIndex + 1]);\n    setCurrentFlashcardIndex(currentFlashcardIndex + 1);\n  };\n  const previousCard = () => {\n    setCurrentFlashcard(flashcards[currentFlashcardIndex - 1]);\n    setCurrentFlashcardIndex(currentFlashcardIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: set && flashcards ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Flashcard-h1\",\n        children: set.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Flashcard-h2\",\n        children: set.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        isFlipped: flip,\n        flipDirection: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideOne\",\n          onClick: () => setFlip(!flip),\n          children: [currentFlashcard.sideOneImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentFlashcard.sideOneImageUrl,\n            alt: \"flashcard side one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 53\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentFlashcard.sideOneText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideTwo\",\n          onClick: () => setFlip(!flip),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentFlashcard.sideTwoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Flashcard-navigate-buttons\",\n        children: [currentFlashcardIndex === 0 ? '' : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextCard,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 57\n        }, this), currentFlashcardIndex === flashcards.length - 1 ? '' : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previousCard,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Flashcard-h1\",\n      children: \"Loading set...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n_s(FlashcardPractice, \"Bv2LS0NeDeMmwXUMesPfxWF53R8=\", false, function () {\n  return [useParams];\n});\n_c = FlashcardPractice;\nexport default FlashcardPractice;\n\n// <> \n// {set && flashcards ? \n// <div>\n//     <h1>{set.name}</h1>\n//     <h2>{set.description}</h2>\n//     <div className=\"Flashcard-outer\">\n//         <div className=\"Flashcard-inner\">\n//             <div className=\"Flashcard\">\n//                 <div className=\"Flashcard-side-one\">\n//                     {currentFlashcard.sideOneImageUrl !== '' ? \n//                     <img src={currentFlashcard.sideOneImageUrl}></img>\n//                     : ''}\n//                     <p className=\"Flashcard-text\">{currentFlashcard.sideOneText}</p>\n//                 </div>\n\n//                 <div className=\"Flashcard-side-two\">\n//                     <p className=\"Flashcard-text\">{currentFlashcard.sideTwoText}</p>\n//                 </div>\n//             </div>\n//         </div>\n//      </div>\n// </div> \n//     :\n//     <h1 className=\"Flashcard-h1\">Loading set...</h1>\n//     } \n// </>\n//     )\n// }\n\n// export default FlashcardPractice;\nvar _c;\n$RefreshReg$(_c, \"FlashcardPractice\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","UserContext","ReactCardFlip","jsxDEV","_jsxDEV","Fragment","_Fragment","FlashcardPractice","_s","flip","setFlip","id","request","set","setSet","flashcards","setFlashcards","currentFlashcard","setCurrentFlashcard","currentFlashcardIndex","setCurrentFlashcardIndex","getSet","resp","length","nextCard","previousCard","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","description","isFlipped","flipDirection","onClick","sideOneImageUrl","src","alt","sideOneText","sideTwoText","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\nimport ReactCardFlip from \"react-card-flip\";\n\n// const FlashcardPractice = () => {\n//     const { id } = useParams()\n//     const { request } = useContext(UserContext)\n//     const [set, setSet] = useState()\n//     const [flashcards, setFlashcards] = useState([])\n//     const [currentFlashcard, setCurrentFlashcard] = useState(null)\n//     const [currentSide, setCurrentSide] = useState(1)\n\n//     // get set and flashcards on load\n//     useEffect(() => {\n//         const getSet = async () => {\n//             const resp = await request(`sets/${id}`)\n//             setSet(resp.set)  \n//             setFlashcards(resp.set.flashcards)\n//             if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0])\n//         }\n//         getSet()\n//     }, [])\n\n  \n\n   \n//     return (\n   \n\n\nfunction FlashcardPractice() {\n\tconst [flip, setFlip] = useState(false);\n    const { id } = useParams()\n    const { request } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const [flashcards, setFlashcards] = useState([])\n    const [currentFlashcard, setCurrentFlashcard] = useState(null)\n    const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0)\n\n    // get set and flashcards on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)  \n            setFlashcards(resp.set.flashcards)\n            if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0])\n        }\n        getSet()\n    }, [])\n\n    const nextCard = () => {\n        setCurrentFlashcard(flashcards[currentFlashcardIndex+1])\n        setCurrentFlashcardIndex(currentFlashcardIndex+1)\n    }\n\n    const previousCard = () => {\n        setCurrentFlashcard(flashcards[currentFlashcardIndex-1])\n        setCurrentFlashcardIndex(currentFlashcardIndex-1)\n    }\n\n\treturn (\n        <>\n            {set && flashcards ?\n            <div>\n                <h1 className=\"Flashcard-h1\">{set.name}</h1>\n                <h2 className=\"Flashcard-h2\">{set.description}</h2>\n\t\t        <ReactCardFlip isFlipped={flip} flipDirection=\"vertical\">\n\t\t\t            <div className=\"sideOne\" onClick={() => setFlip(!flip)}>\n\t\t\t\t            {currentFlashcard.sideOneImageUrl ? <img src={currentFlashcard.sideOneImageUrl} alt=\"flashcard side one\"></img> : ''}\n                            <p>{currentFlashcard.sideOneText}</p>\n\t\t\t            </div>\n\n\t\t\t            <div className=\"sideTwo\" onClick={() => setFlip(!flip)}>\n\t\t\t\t            <p>{currentFlashcard.sideTwoText}</p>\n\t\t\t            </div>\n\t\t        </ReactCardFlip>\n                <div className=\"Flashcard-navigate-buttons\">\n                    {currentFlashcardIndex === 0 ? '' : <button onClick={nextCard}>&lt;</button>}\n                    {currentFlashcardIndex === flashcards.length-1 ? '' : <button onClick={previousCard}>&gt;</button> }\n                </div>\n            </div>\n            : <h1 className=\"Flashcard-h1\">Loading set...</h1>}   \n        </>\n\t);\n}\n\nexport default FlashcardPractice;\n\n        // <> \n        // {set && flashcards ? \n        // <div>\n        //     <h1>{set.name}</h1>\n        //     <h2>{set.description}</h2>\n        //     <div className=\"Flashcard-outer\">\n        //         <div className=\"Flashcard-inner\">\n        //             <div className=\"Flashcard\">\n        //                 <div className=\"Flashcard-side-one\">\n        //                     {currentFlashcard.sideOneImageUrl !== '' ? \n        //                     <img src={currentFlashcard.sideOneImageUrl}></img>\n        //                     : ''}\n        //                     <p className=\"Flashcard-text\">{currentFlashcard.sideOneText}</p>\n        //                 </div>\n\n        //                 <div className=\"Flashcard-side-two\">\n        //                     <p className=\"Flashcard-text\">{currentFlashcard.sideTwoText}</p>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //      </div>\n        // </div> \n        //     :\n        //     <h1 className=\"Flashcard-h1\">Loading set...</h1>\n        //     } \n        // </>\n//     )\n// }\n\n// export default FlashcardPractice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}