{"ast":null,"code":"const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\nasync function request(endpoint) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"get\";\n  console.debug(\"API Call:\", endpoint, data, method);\n\n  //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n  //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n  console.log(token);\n  const url = `${BASE_URL}/${endpoint}`;\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  const params = method === \"get\" ? data : {};\n  try {\n    return (await axios({\n      url,\n      method,\n      data,\n      params,\n      headers\n    })).data;\n  } catch (err) {\n    console.error(\"API Error:\", err.response);\n    let message = err.response.data.error.message;\n    throw Array.isArray(message) ? message : [message];\n  }\n}\nexport default request;","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_BASE_URL","request","endpoint","data","arguments","length","undefined","method","console","debug","log","token","url","headers","Authorization","params","axios","err","error","response","message","Array","isArray"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/utils/helpers.js"],"sourcesContent":["const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nasync function request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    console.log(token)\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${token}` } \n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  export default request;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAE1E,eAAeC,OAAOA,CAACC,QAAQ,EAA6B;EAAA,IAA3BC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACtDI,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEP,QAAQ,EAAEC,IAAI,EAAEI,MAAM,CAAC;;EAElD;EACA;EACAC,OAAO,CAACE,GAAG,CAACC,KAAK,CAAC;EAClB,MAAMC,GAAG,GAAI,GAAEf,QAAS,IAAGK,QAAS,EAAC;EACrC,MAAMW,OAAO,GAAG;IAAEC,aAAa,EAAG,UAASH,KAAM;EAAE,CAAC;EACpD,MAAMI,MAAM,GAAIR,MAAM,KAAK,KAAK,GAC1BJ,IAAI,GACJ,CAAC,CAAC;EAER,IAAI;IACF,OAAO,CAAC,MAAMa,KAAK,CAAC;MAAEJ,GAAG;MAAEL,MAAM;MAAEJ,IAAI;MAAEY,MAAM;MAAEF;IAAQ,CAAC,CAAC,EAAEV,IAAI;EACnE,CAAC,CAAC,OAAOc,GAAG,EAAE;IACZT,OAAO,CAACU,KAAK,CAAC,YAAY,EAAED,GAAG,CAACE,QAAQ,CAAC;IACzC,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAQ,CAAChB,IAAI,CAACe,KAAK,CAACE,OAAO;IAC7C,MAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;EACpD;AACF;AAEA,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}