{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    post,\n    groupId,\n    posts,\n    setPosts\n  } = _ref;\n  const {\n    currentUser,\n    request\n  } = useContext(UserContext);\n  const [editMode, setEditMode] = useState(false);\n  const [replies, setReplies] = useState();\n  const INITIAL_STATE = {\n    text: post.text\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  const deletePost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\");\n    const remainingPosts = posts.filter(p => p.id !== post.id);\n    setPosts(remainingPosts);\n  };\n  const editPost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\");\n    const resp = await request(`groups/${groupId}/posts`);\n    const newPosts = resp.posts;\n    setPosts(newPosts);\n    setEditMode(!editMode);\n  };\n\n  // get a post's replies and map them into a reply component\n  useEffect(() => {\n    const getReplies = async () => {\n      const resp = await request(`posts/${post.id}/replies`);\n      const replies = resp.replies;\n      setReplies(replies);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post-posted-by\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.postedBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post-date-posted\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.datePosted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post-text\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: formData.text,\n        name: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post-text\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), post.postedBy === currentUser.username ? editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post-save-changes-button\",\n        onClick: editPost,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post-cancel-changes-button\",\n        onClick: () => setEditMode(!editMode),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post-edit-button\",\n        onClick: () => setEditMode(!editMode),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Post-delete-button\",\n        onClick: deletePost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post-reply-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"ubOiwfIh0qAzS0hagCNaHRoM1eM=\", false, function () {\n  return [useFields];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useContext","useState","useEffect","UserContext","useFields","jsxDEV","_jsxDEV","Post","_ref","_s","post","groupId","posts","setPosts","currentUser","request","editMode","setEditMode","replies","setReplies","INITIAL_STATE","text","formData","handleChange","deletePost","id","remainingPosts","filter","p","editPost","resp","newPosts","getReplies","className","children","postedBy","fileName","_jsxFileName","lineNumber","columnNumber","datePosted","value","name","onChange","username","onClick","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\n\n\nconst Post = ({post, groupId, posts, setPosts}) => {\n    const { currentUser, request } = useContext(UserContext)\n    const [editMode, setEditMode] = useState(false)\n    const [replies, setReplies] = useState()\n    \n    const INITIAL_STATE = {\n        text: post.text\n    }\n    const [formData, handleChange] =  useFields(INITIAL_STATE)\n    const deletePost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\")\n        const remainingPosts = posts.filter(p => p.id !== post.id)\n        setPosts(remainingPosts)\n    }\n\n    const editPost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\")\n        const resp = await request(`groups/${groupId}/posts`)\n        const newPosts = resp.posts\n        setPosts(newPosts)\n        setEditMode(!editMode)\n    }\n\n    // get a post's replies and map them into a reply component\n    useEffect(() => {\n        const getReplies = async () => {\n            const resp = await request(`posts/${post.id}/replies`)\n            const replies = resp.replies\n            setReplies(replies)\n        }\n    }, [])\n\n    return (\n        <div className=\"Post\">\n            <div className=\"Post-posted-by\">\n                <div>{post.postedBy}</div>\n            </div>\n            <div className=\"Post-date-posted\">\n                <div >{post.datePosted}</div>\n            </div>\n    \n            {editMode \n                ?\n                <div className=\"Post-text\">\n                    <textarea value={formData.text} name=\"text\" onChange={handleChange}></textarea>\n                </div>\n                :\n                <div className=\"Post-text\">\n                    <div>{post.text}</div>\n                </div>\n            }\n\n            {post.postedBy === currentUser.username \n                ?\n                editMode \n                    ?\n                    <div>\n                        <button className=\"Post-save-changes-button\" onClick={editPost}>Save Changes</button>\n                        <button className=\"Post-cancel-changes-button\" onClick={() => setEditMode(!editMode)}>Cancel</button>\n                    </div>\n                    :\n                    <div>\n                        <button className=\"Post-edit-button\" onClick={() => setEditMode(!editMode)}>Edit</button>\n                        <button className=\"Post-delete-button\" onClick={deletePost}>Delete</button>\n                    </div>\n                :\n                <div className=\"Post-reply-button\">\n                    <button>Reply</button>\n                </div>\n            }\n\n            \n        </div>\n    )\n}\n\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}