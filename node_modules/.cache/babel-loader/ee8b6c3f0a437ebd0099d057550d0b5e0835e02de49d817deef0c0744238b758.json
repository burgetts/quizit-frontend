{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\nimport Reply from './Reply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    post,\n    groupId,\n    posts,\n    setPosts\n  } = _ref;\n  const {\n    currentUser,\n    request\n  } = useContext(UserContext);\n  const [editMode, setEditMode] = useState(false);\n  const [replies, setReplies] = useState();\n  const INITIAL_STATE = {\n    text: post.text\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  const deletePost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\");\n    const remainingPosts = posts.filter(p => p.id !== post.id);\n    setPosts(remainingPosts);\n  };\n  const editPost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\");\n    const resp = await request(`groups/${groupId}/posts`);\n    const newPosts = resp.posts;\n    setPosts(newPosts);\n    setEditMode(!editMode);\n  };\n\n  // get a post's replies and map them into a reply component\n  useEffect(() => {\n    const getReplies = async () => {\n      const resp = await request(`groups/${groupId}/posts/${post.id}/replies`);\n      const replies = resp.replies;\n      setReplies([replies]);\n    };\n    getReplies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-posted-by\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.postedBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-date-posted\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.datePosted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-text\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.text,\n          name: \"text\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-text\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), post.postedBy === currentUser.username ? editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-save-changes-button\",\n          onClick: editPost,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-cancel-changes-button\",\n          onClick: () => setEditMode(!editMode),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-edit-button\",\n          onClick: () => setEditMode(!editMode),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-delete-button\",\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-reply-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), replies && replies.map(r => /*#__PURE__*/_jsxDEV(Reply, {\n      reply: r,\n      groupId: groupId,\n      setReplies: setReplies,\n      replies: replies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true);\n};\n_s(Post, \"ubOiwfIh0qAzS0hagCNaHRoM1eM=\", false, function () {\n  return [useFields];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useContext","useState","useEffect","UserContext","useFields","Reply","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_ref","_s","post","groupId","posts","setPosts","currentUser","request","editMode","setEditMode","replies","setReplies","INITIAL_STATE","text","formData","handleChange","deletePost","id","remainingPosts","filter","p","editPost","resp","newPosts","getReplies","children","className","postedBy","fileName","_jsxFileName","lineNumber","columnNumber","datePosted","value","name","onChange","username","onClick","map","r","reply","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\nimport Reply from './Reply';\n\n\nconst Post = ({post, groupId, posts, setPosts}) => {\n    const { currentUser, request } = useContext(UserContext)\n    const [editMode, setEditMode] = useState(false)\n    const [replies, setReplies] = useState()\n    \n    const INITIAL_STATE = {\n        text: post.text\n    }\n    const [formData, handleChange] =  useFields(INITIAL_STATE)\n    const deletePost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\")\n        const remainingPosts = posts.filter(p => p.id !== post.id)\n        setPosts(remainingPosts)\n    }\n\n    const editPost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\")\n        const resp = await request(`groups/${groupId}/posts`)\n        const newPosts = resp.posts\n        setPosts(newPosts)\n        setEditMode(!editMode)\n    }\n\n    // get a post's replies and map them into a reply component\n    useEffect(() => {\n        const getReplies = async () => {\n            const resp = await request(`groups/${groupId}/posts/${post.id}/replies`)\n            const replies = resp.replies\n            setReplies([replies])\n        }\n        getReplies()\n    }, [])\n\n    return (\n        <>\n        <div className=\"Post\">\n            <div className=\"Post-posted-by\">\n                <div>{post.postedBy}</div>\n            </div>\n            <div className=\"Post-date-posted\">\n                <div >{post.datePosted}</div>\n            </div>\n    \n            {editMode \n                ?\n                <div className=\"Post-text\">\n                    <textarea value={formData.text} name=\"text\" onChange={handleChange}></textarea>\n                </div>\n                :\n                <div className=\"Post-text\">\n                    <div>{post.text}</div>\n                </div>\n            }\n\n            {post.postedBy === currentUser.username \n                ?\n                editMode \n                    ?\n                    <div>\n                        <button className=\"Post-save-changes-button\" onClick={editPost}>Save Changes</button>\n                        <button className=\"Post-cancel-changes-button\" onClick={() => setEditMode(!editMode)}>Cancel</button>\n                    </div>\n                    :\n                    <div>\n                        <button className=\"Post-edit-button\" onClick={() => setEditMode(!editMode)}>Edit</button>\n                        <button className=\"Post-delete-button\" onClick={deletePost}>Delete</button>\n                    </div>\n                :\n                <div className=\"Post-reply-button\">\n                    <button>Reply</button>\n                </div>\n            }\n\n            \n        </div>\n        {replies && replies.map(r => <Reply reply={r} groupId={groupId} setReplies={setReplies} replies={replies} />)}\n        </>\n    )\n}\n\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}