{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport SetEditCard from './SetEditCard';\nimport NewFlashcardForm from './NewFlashcardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request,\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const [flashcards, setFlashcards] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [newFlashcards, setNewFlashcards] = useState([]);\n  const navigate = useNavigate();\n\n  // get set data on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(resp.set.flashcards);\n    };\n    getSet();\n  }, [editMode]);\n  const toggleEditMode = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  };\n  const deleteSet = async () => {\n    await request(`sets/${id}`, {}, 'delete');\n    const user = await request(`users/${currentUser.username}`);\n    setCurrentUser(user.user);\n    navigate(`/flashcards`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [set ? !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Set\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-name\",\n          children: set.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-description\",\n          children: set.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), set.createdBy === currentUser.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Set-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleEditMode(editMode),\n            children: \"Edit Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: deleteSet,\n            children: \"Delete Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SetEditCard, {\n      set: set,\n      toggleEditMode: toggleEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Set-h1\",\n      children: \" Loading set... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flashcard-container\",\n      children: flashcards.map(f => /*#__PURE__*/_jsxDEV(SplitFlashcard, {\n        flashcard: f,\n        flashcards: flashcards,\n        sideOneName: set.sideOneName,\n        sideTwoName: set.sideTwoName,\n        setFlashcards: setFlashcards\n      }, f.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Flashcards-h2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 43\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 49\n      }, this), \"No flashcards yet!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-practice\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/flashcards/sets/${id}/practice`,\n        children: \" Practice \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-add-flashcard\",\n      onClick: () => setNewFlashcards([...newFlashcards, 1]),\n      children: \"Add Flashcard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), newFlashcards.map(f => /*#__PURE__*/_jsxDEV(NewFlashcardForm, {\n      sideOneName: set.sideOneName,\n      sideTwoName: set.sideTwoName,\n      setFlashcards: setFlashcards,\n      setNewFlashcards: setNewFlashcards,\n      newFlashcards: newFlashcards,\n      setId: set.id,\n      flashcards: flashcards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true);\n};\n_s(Set, \"yyGrUH3DdLWunhnNSBmunwaBeDQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useNavigate","Link","UserContext","SplitFlashcard","SetEditCard","NewFlashcardForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_s","id","request","currentUser","setCurrentUser","set","setSet","flashcards","setFlashcards","editMode","setEditMode","newFlashcards","setNewFlashcards","navigate","getSet","resp","toggleEditMode","deleteSet","user","username","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","description","createdBy","onClick","length","map","f","flashcard","sideOneName","sideTwoName","to","setId","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport SetEditCard from './SetEditCard';\nimport NewFlashcardForm from './NewFlashcardForm';\n\nconst Set =  () => {\n    const { id } = useParams()\n    const { request, currentUser, setCurrentUser } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const [flashcards, setFlashcards] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [newFlashcards, setNewFlashcards]= useState([])\n    const navigate = useNavigate()\n\n    // get set data on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)\n            setFlashcards(resp.set.flashcards)\n        }\n        getSet()\n    }, [editMode])\n  \n    const toggleEditMode = () => {\n        editMode ? setEditMode(false) : setEditMode(true)\n    }\n   \n    const deleteSet = async () => {\n        await request(`sets/${id}`, {}, 'delete')\n        const user = await request(`users/${currentUser.username}`)\n        setCurrentUser(user.user)\n        navigate(`/flashcards`)\n    }\n\n\n    return (\n        <>\n        {set ? \n        !editMode ? \n        <div>\n            <div className=\"Set\">\n                <p className=\"Set-name\">{set.name}</p>\n                <p className=\"Set-description\">{set.description}</p>\n                {set.createdBy === currentUser.username ? \n                <div className=\"Set-buttons\">\n                    <button onClick={() => toggleEditMode(editMode)}>Edit Set</button>\n                    <button className=\"delete-button\" onClick={deleteSet}>Delete Set</button>\n                </div>\n                : '' }\n            </div>\n        </div>\n        : \n        <SetEditCard set={set} toggleEditMode={toggleEditMode} />\n        : \n        <h1 className=\"Set-h1\"> Loading set... </h1> }\n\n        { flashcards.length > 0 ? \n            <div className=\"Flashcard-container\">\n                {flashcards.map(f => <SplitFlashcard key={f.id} flashcard={f} flashcards={flashcards} sideOneName={set.sideOneName} sideTwoName={set.sideTwoName} setFlashcards={setFlashcards}/>)}\n            </div>\n        :  \n           <h2 className=\"Flashcards-h2\"> <br/> <br/>No flashcards yet!</h2>}\n\n        {flashcards.length > 0 ? \n        <button className=\"Set-buttons-practice\">\n            <Link to={`/flashcards/sets/${id}/practice`}> Practice </Link> \n        </button> : ''}\n        <button className=\"Set-buttons-add-flashcard\" onClick={() => setNewFlashcards([...newFlashcards, 1])}>Add Flashcard</button>\n        {newFlashcards.map((f) => <NewFlashcardForm sideOneName={set.sideOneName} sideTwoName={set.sideTwoName} setFlashcards={setFlashcards} setNewFlashcards={setNewFlashcards} newFlashcards={newFlashcards} setId={set.id} flashcards={flashcards}/>)}\n\n        </>\n        \n    )\n}\n\nexport default Set;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}