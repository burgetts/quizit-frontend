{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostReply.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useFields } from '../utils/hooks';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPostReply = _ref => {\n  _s();\n  let {\n    newReplyMode,\n    setNewReplyMode,\n    replies,\n    setReplies,\n    groupId,\n    postId\n  } = _ref;\n  const {\n    request\n  } = useContext(UserContext);\n  const INITIAL_STATE = {\n    text: '',\n    reply_to: postId\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    const resp = await request(`groups/${groupId}/posts`, formData, \"post\");\n    const newReply = resp.reply;\n    setReplies([...replies, newReply]);\n    setNewReplyMode(!newReplyMode);\n  };\n  // on submit, add reply to database and update replies from Post\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: newReplyMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewReply\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewReply-text\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.text,\n          onChange: handleChange,\n          name: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewReply-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewReply-post-button\",\n          onClick: handleSubmit,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewReply-cancel-button\",\n          onClick: () => setNewReplyMode(!newReplyMode),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false);\n};\n_s(NewPostReply, \"uew+bmvQPym52jR7IpmA3tAOULA=\", false, function () {\n  return [useFields];\n});\n_c = NewPostReply;\nexport default NewPostReply;\nvar _c;\n$RefreshReg$(_c, \"NewPostReply\");","map":{"version":3,"names":["React","useContext","useFields","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostReply","_ref","_s","newReplyMode","setNewReplyMode","replies","setReplies","groupId","postId","request","INITIAL_STATE","text","reply_to","formData","handleChange","handleSubmit","e","preventDefault","console","log","resp","newReply","reply","children","className","value","onChange","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostReply.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useFields } from '../utils/hooks';\nimport UserContext from '../utils/UserContext';\n\nconst NewPostReply = ({newReplyMode, setNewReplyMode, replies, setReplies, groupId, postId}) => {\n    const { request } = useContext(UserContext)\n    const INITIAL_STATE = {\n        text: '',\n        reply_to: postId\n    }\n    const [formData, handleChange] = useFields(INITIAL_STATE)\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log(formData)\n        const resp = await request(`groups/${groupId}/posts`, formData, \"post\")\n        const newReply = resp.reply\n        setReplies ([...replies, newReply])\n        setNewReplyMode(!newReplyMode)\n    }\n    // on submit, add reply to database and update replies from Post\n    return (\n        <>\n        {newReplyMode \n            ? \n            <div className=\"NewReply\">\n                <div className=\"NewReply-text\">\n                    <textarea value={formData.text} onChange={handleChange} name=\"text\"></textarea>\n                </div>\n                <div className=\"NewReply-buttons\">\n                    <button className=\"NewReply-post-button\" onClick={handleSubmit}>Post</button>\n                    <button className=\"NewReply-cancel-button\" onClick={() => setNewReplyMode(!newReplyMode)}>Cancel</button>\n                </div>\n            </div>\n            : \n            ''\n        }\n        </>\n    )\n}\n\nexport default NewPostReply;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,YAAY,GAAGC,IAAA,IAA2E;EAAAC,EAAA;EAAA,IAA1E;IAACC,YAAY;IAAEC,eAAe;IAAEC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAP,IAAA;EACvF,MAAM;IAAEQ;EAAQ,CAAC,GAAGhB,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAMe,aAAa,GAAG;IAClBC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAEJ;EACd,CAAC;EACD,MAAM,CAACK,QAAQ,EAAEC,YAAY,CAAC,GAAGpB,SAAS,CAACgB,aAAa,CAAC;EACzD,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB,MAAMO,IAAI,GAAG,MAAMX,OAAO,CAAE,UAASF,OAAQ,QAAO,EAAEM,QAAQ,EAAE,MAAM,CAAC;IACvE,MAAMQ,QAAQ,GAAGD,IAAI,CAACE,KAAK;IAC3BhB,UAAU,CAAE,CAAC,GAAGD,OAAO,EAAEgB,QAAQ,CAAC,CAAC;IACnCjB,eAAe,CAAC,CAACD,YAAY,CAAC;EAClC,CAAC;EACD;EACA,oBACIN,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EACCpB,YAAY,gBAETN,OAAA;MAAK2B,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrB1B,OAAA;QAAK2B,SAAS,EAAC,eAAe;QAAAD,QAAA,eAC1B1B,OAAA;UAAU4B,KAAK,EAAEZ,QAAQ,CAACF,IAAK;UAACe,QAAQ,EAAEZ,YAAa;UAACa,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAY;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7E,eACNlC,OAAA;QAAK2B,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC7B1B,OAAA;UAAQ2B,SAAS,EAAC,sBAAsB;UAACQ,OAAO,EAAEjB,YAAa;UAAAQ,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC7ElC,OAAA;UAAQ2B,SAAS,EAAC,wBAAwB;UAACQ,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAoB,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,GAEN;EAAE,iBAEH;AAEX,CAAC;AAAA7B,EAAA,CAlCKF,YAAY;EAAA,QAMmBN,SAAS;AAAA;AAAAuC,EAAA,GANxCjC,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}