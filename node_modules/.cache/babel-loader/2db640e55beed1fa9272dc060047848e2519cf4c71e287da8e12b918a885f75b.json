{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { useFields } from '../utils/hooks';\nimport '../css/NewPostForm.css';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPostForm = _ref => {\n  _s();\n  let {\n    groupId\n  } = _ref;\n  const {\n    currentUser,\n    request,\n    setCurrentUser\n  } = useContext(UserContext);\n  const INITIAL_STATE = {\n    text: ''\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  useEffect(() => {}, [request]);\n  const addPost = async e => {\n    e.preventDefault();\n    await request(`groups/${groupId}/posts`, formData, \"post\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"NewPostForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"NewPostForm-input\",\n          type: \"textarea\",\n          name: \"text\",\n          value: formData.text,\n          onChange: handleChange,\n          placeholder: \"Make a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewPostForm-post-button\",\n          onClick: addPost,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(NewPostForm, \"gFhBUcSfRinuHgEQ4NRnsqep0zc=\", false, function () {\n  return [useFields];\n});\n_c = NewPostForm;\nexport default NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["React","useContext","useEffect","useFields","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostForm","_ref","_s","groupId","currentUser","request","setCurrentUser","INITIAL_STATE","text","formData","handleChange","addPost","e","preventDefault","children","className","type","name","value","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostForm.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useFields } from '../utils/hooks';\nimport '../css/NewPostForm.css';\nimport UserContext from '../utils/UserContext';\n\nconst NewPostForm = ({groupId}) => {\n    const { currentUser, request, setCurrentUser } = useContext(UserContext)\n    const INITIAL_STATE = {\n        text: ''\n    }\n    const [formData, handleChange] = useFields(INITIAL_STATE)\n\n    useEffect(() => {\n        \n    }, [request])\n\n    const addPost = async (e) => {\n        e.preventDefault()\n        await request(`groups/${groupId}/posts`, formData, \"post\")\n        \n    }\n\n    return (\n       <>\n        <form className=\"NewPostForm\">\n            <div>\n                <textarea className=\"NewPostForm-input\" type=\"textarea\" name=\"text\" value={formData.text} onChange={handleChange} placeholder=\"Make a post\"></textarea>\n            </div>\n            <div>\n                <button className=\"NewPostForm-post-button\" onClick={addPost}>Post</button>\n            </div>\n        </form>\n       </>\n    )\n}\n\nexport default NewPostForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAO,wBAAwB;AAC/B,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,WAAW,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EAC1B,MAAM;IAAEG,WAAW;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC;EACxE,MAAMY,aAAa,GAAG;IAClBC,IAAI,EAAE;EACV,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGhB,SAAS,CAACa,aAAa,CAAC;EAEzDd,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACY,OAAO,CAAC,CAAC;EAEb,MAAMM,OAAO,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMR,OAAO,CAAE,UAASF,OAAQ,QAAO,EAAEM,QAAQ,EAAE,MAAM,CAAC;EAE9D,CAAC;EAED,oBACGZ,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACCjB,OAAA;MAAMkB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBACzBjB,OAAA;QAAAiB,QAAA,eACIjB,OAAA;UAAUkB,SAAS,EAAC,mBAAmB;UAACC,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAET,QAAQ,CAACD,IAAK;UAACW,QAAQ,EAAET,YAAa;UAACU,WAAW,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAY;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrJ,eACN3B,OAAA;QAAAiB,QAAA,eACIjB,OAAA;UAAQkB,SAAS,EAAC,yBAAyB;UAACU,OAAO,EAAEd,OAAQ;UAAAG,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBACL;AAEV,CAAC;AAAAtB,EAAA,CA7BKF,WAAW;EAAA,QAKoBN,SAAS;AAAA;AAAAgC,EAAA,GALxC1B,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}