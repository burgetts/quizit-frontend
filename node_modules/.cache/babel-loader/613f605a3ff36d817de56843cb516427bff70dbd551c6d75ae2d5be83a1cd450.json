{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/SplitFlashcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport UserContext from '../utils/UserContext';\nimport '../css/SplitFlashcard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitFlashcard = _ref => {\n  _s();\n  let {\n    flashcard,\n    sideOneName,\n    sideTwoName,\n    setFlashcards,\n    flashcards\n  } = _ref;\n  const {\n    request,\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n\n  // edit flashcard\n\n  const deleteFlashcard = async id => {\n    await request(`flashcards/${flashcard.id}`, {}, 'delete');\n    const removeFlashcard = flashcards.filter(f => f.id !== id);\n    setFlashcards(removeFlashcard);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SplitFlashcard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SplitFlashcard-side-one\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"SplitFlashcard-side-name\",\n        children: sideOneName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), flashcard.sideOneImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"SplitFlashcard-image\",\n        src: flashcard.sideOneImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 46\n      }, this) : '', flashcard.sideOneText !== '' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"SplitFlashcard-text\",\n        children: flashcard.sideOneText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SplitFlashcard-side-two\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"SplitFlashcard-side-name\",\n        children: sideTwoName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), flashcard.sideTwoText !== '' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"SplitFlashcard-text\",\n        children: flashcard.sideTwoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SplitFlashcard-flashcard-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => deleteFlashcard(flashcard.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(SplitFlashcard, \"kU/ia52Bdu+dem6FtBCTOG60Ix0=\");\n_c = SplitFlashcard;\nexport default SplitFlashcard;\nvar _c;\n$RefreshReg$(_c, \"SplitFlashcard\");","map":{"version":3,"names":["React","useState","useContext","UserContext","jsxDEV","_jsxDEV","SplitFlashcard","_ref","_s","flashcard","sideOneName","sideTwoName","setFlashcards","flashcards","request","currentUser","setCurrentUser","deleteFlashcard","id","removeFlashcard","filter","f","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sideOneImageUrl","src","sideOneText","sideTwoText","onClick","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/SplitFlashcard.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport UserContext from '../utils/UserContext';\nimport '../css/SplitFlashcard.css';\n\nconst SplitFlashcard = ({flashcard, sideOneName, sideTwoName, setFlashcards, flashcards}) => {\n    const { request, currentUser, setCurrentUser } = useContext(UserContext)\n\n    // edit flashcard\n\n    \n    const deleteFlashcard = async (id) => {\n        await request(`flashcards/${flashcard.id}`, {}, 'delete')\n        const removeFlashcard = flashcards.filter(f => f.id !== id)\n        setFlashcards(removeFlashcard)\n    }\n\n\n    return (\n        <div className=\"SplitFlashcard\">\n            <div className=\"SplitFlashcard-side-one\">\n                <h6 className=\"SplitFlashcard-side-name\">{sideOneName}</h6>\n                {flashcard.sideOneImageUrl ? <img className=\"SplitFlashcard-image\" src={flashcard.sideOneImageUrl}></img> : ''}\n                {flashcard.sideOneText !== '' ?\n                <span className=\"SplitFlashcard-text\">{flashcard.sideOneText}</span>\n                : ''}\n            </div>\n\n            <div className=\"SplitFlashcard-side-two\">\n                <h6 className=\"SplitFlashcard-side-name\">{sideTwoName}</h6>\n                {flashcard.sideTwoText !== '' ?\n                <span className=\"SplitFlashcard-text\">{flashcard.sideTwoText}</span>\n                : ''}\n                <div className=\"SplitFlashcard-flashcard-buttons\">\n                    <button>Edit</button>\n                    <button className=\"delete-button\" onClick={() => deleteFlashcard(flashcard.id)}>Delete</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SplitFlashcard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}