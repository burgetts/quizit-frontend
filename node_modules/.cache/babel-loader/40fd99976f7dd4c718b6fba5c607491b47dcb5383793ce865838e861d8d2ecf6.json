{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FlashcardPractice = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentFlashcard, setCurrentFlashcard] = useState(null);\n  const [currentSide, setCurrentSide] = useState(1);\n\n  // get set and flashcards on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(set.flashcards);\n      if (flashcards.length > 0) {\n        setCurrentFlashcard(flashcards[0]);\n      }\n    };\n    getSet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", set ? flashcards.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Flashcard-h1\",\n      children: \"No flashcards to practice yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: set.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: set.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Flashcard-side-one\",\n        children: [currentFlashcard.sideOneImageUrl !== '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentFlashcard.sideOneImageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentFlashcard.sideOneText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Flashcard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Flashcard-h1\",\n      children: \"Loading set...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FlashcardPractice, \"+IUFWrPmx62rz7hfBxfrc/QvF5U=\", false, function () {\n  return [useParams];\n});\n_c = FlashcardPractice;\nexport default FlashcardPractice;\nvar _c;\n$RefreshReg$(_c, \"FlashcardPractice\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","FlashcardPractice","_s","id","request","set","setSet","flashcards","setFlashcards","currentFlashcard","setCurrentFlashcard","currentSide","setCurrentSide","getSet","resp","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","description","sideOneImageUrl","src","sideOneText","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\n\nconst FlashcardPractice = () => {\n    const { id } = useParams()\n    const { request } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const [flashcards, setFlashcards] = useState([])\n    const [currentFlashcard, setCurrentFlashcard] = useState(null)\n    const [currentSide, setCurrentSide] = useState(1)\n\n    // get set and flashcards on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)\n            setFlashcards(set.flashcards)\n            if (flashcards.length > 0){\n                setCurrentFlashcard(flashcards[0])\n            }\n            \n        }\n        getSet()\n    }, [])\n   \n    return (\n        <> {set ? \n            flashcards.length === 0 ? <h1 className=\"Flashcard-h1\">No flashcards to practice yet.</h1> \n            : \n            <div>\n                <h1>{set.name}</h1>\n                <h2>{set.description}</h2>\n\n                <div className=\"Flashcard-side-one\">\n                    {currentFlashcard.sideOneImageUrl !== '' ? \n                        <img src={currentFlashcard.sideOneImageUrl}></img>\n                    : ''}\n                    <p>{currentFlashcard.sideOneText}</p>\n                </div>\n                <div className=\"Flashcard\">\n\n                </div>\n            </div> \n            :\n            <h1 className=\"Flashcard-h1\">Loading set...</h1>\n            } \n        </>\n    )\n}\n\nexport default FlashcardPractice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}