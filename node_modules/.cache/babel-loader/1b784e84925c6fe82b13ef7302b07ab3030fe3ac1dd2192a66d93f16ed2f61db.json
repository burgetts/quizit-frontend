{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostReply.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFields } from '../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPostReply = _ref => {\n  _s();\n  let {\n    newReplyMode,\n    setNewReplyMode,\n    replies,\n    setReplies\n  } = _ref;\n  const INITIAL_STATE = {\n    text: ''\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  // on submit, add reply to database and update replies from Post\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: newReplyMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewReply\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewReply-text\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.text,\n          onChange: handleChange,\n          name: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewReply-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewReply-post-button\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewReply-cancel-button\",\n          onClick: () => setNewReplyMode(!newReplyMode),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false);\n};\n_s(NewPostReply, \"fKH1TR47KZY2AcqZ5o6XWphj6uY=\", false, function () {\n  return [useFields];\n});\n_c = NewPostReply;\nexport default NewPostReply;\nvar _c;\n$RefreshReg$(_c, \"NewPostReply\");","map":{"version":3,"names":["React","useFields","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostReply","_ref","_s","newReplyMode","setNewReplyMode","replies","setReplies","INITIAL_STATE","text","formData","handleChange","children","className","value","onChange","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/NewPostReply.js"],"sourcesContent":["import React from 'react';\nimport { useFields } from '../utils/hooks';\n\nconst NewPostReply = ({newReplyMode, setNewReplyMode, replies, setReplies}) => {\n    const INITIAL_STATE = {\n        text: ''\n    }\n    const [formData, handleChange] = useFields(INITIAL_STATE)\n    // on submit, add reply to database and update replies from Post\n    return (\n        <>\n        {newReplyMode \n            ? \n            <div className=\"NewReply\">\n                <div className=\"NewReply-text\">\n                    <textarea value={formData.text} onChange={handleChange} name=\"text\"></textarea>\n                </div>\n                <div className=\"NewReply-buttons\">\n                    <button className=\"NewReply-post-button\">Post</button>\n                    <button className=\"NewReply-cancel-button\" onClick={() => setNewReplyMode(!newReplyMode)}>Cancel</button>\n                </div>\n            </div>\n            : \n            ''\n        }\n        </>\n    )\n}\n\nexport default NewPostReply;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,YAAY,GAAGC,IAAA,IAA0D;EAAAC,EAAA;EAAA,IAAzD;IAACC,YAAY;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAL,IAAA;EACtE,MAAMM,aAAa,GAAG;IAClBC,IAAI,EAAE;EACV,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGf,SAAS,CAACY,aAAa,CAAC;EACzD;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACCR,YAAY,gBAETN,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBd,OAAA;QAAKe,SAAS,EAAC,eAAe;QAAAD,QAAA,eAC1Bd,OAAA;UAAUgB,KAAK,EAAEJ,QAAQ,CAACD,IAAK;UAACM,QAAQ,EAAEJ,YAAa;UAACK,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAY;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7E,eACNtB,OAAA;QAAKe,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC7Bd,OAAA;UAAQe,SAAS,EAAC,sBAAsB;UAAAD,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACtDtB,OAAA;UAAQe,SAAS,EAAC,wBAAwB;UAACQ,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAQ,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,GAEN;EAAE,iBAEH;AAEX,CAAC;AAAAjB,EAAA,CAxBKF,YAAY;EAAA,QAImBL,SAAS;AAAA;AAAA0B,EAAA,GAJxCrB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}