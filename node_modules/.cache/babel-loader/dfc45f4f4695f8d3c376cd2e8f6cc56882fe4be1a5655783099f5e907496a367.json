{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request,\n    currentUser\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const [flashcards, setFlashcards] = useState([]);\n\n  // get set data on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(resp.set.flashcards);\n    };\n    getSet();\n  }, []);\n\n  // informational card on top\n  // map flashcards into cards\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [set ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Set\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-name\",\n          children: set.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-description\",\n          children: set.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-side-one\",\n          children: [\"Side One: \", set.sideOneName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-side-two\",\n          children: [\"Side Two: \", set.sideTwoName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), set.createdBy === currentUser.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Set-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Set-h1\",\n      children: \" Loading set \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flashcard-container\",\n      children: flashcards.map(f => /*#__PURE__*/_jsxDEV(SplitFlashcard, {\n        flashcard: f\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Flashcards-h2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 49\n      }, this), \"No flashcards yet!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-practice\",\n      children: \"Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(Set, \"RoxgYu6/NbwwPrUEQ8mhjZIL6wU=\", false, function () {\n  return [useParams];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","UserContext","SplitFlashcard","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_s","id","request","currentUser","set","setSet","flashcards","setFlashcards","getSet","resp","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","description","sideOneName","sideTwoName","createdBy","username","length","map","f","flashcard","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard'\n\n\nconst Set =  () => {\n    const { id } = useParams()\n    const { request, currentUser } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const [flashcards, setFlashcards] = useState([])\n\n    // get set data on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)\n            setFlashcards(resp.set.flashcards)\n        }\n        getSet()\n    }, [])\n  \n    // informational card on top\n    // map flashcards into cards\n    return (\n        <>\n        {set ? \n        <div>\n            <div className=\"Set\">\n                <p className=\"Set-name\">{set.name}</p>\n                <p className=\"Set-description\">{set.description}</p>\n                <p className=\"Set-side-one\">Side One: {set.sideOneName}</p>\n                <p className=\"Set-side-two\">Side Two: {set.sideTwoName}</p>\n                {set.createdBy === currentUser.username? \n                <div className=\"Set-buttons\">\n                    <button>Edit</button>\n                    <button>Delete</button>\n                </div>\n                : '' }\n            </div>\n            \n        </div>\n        : \n        <h1 className=\"Set-h1\"> Loading set </h1> }\n\n        { flashcards.length > 0 ? \n            <div className=\"Flashcard-container\">\n                {flashcards.map(f => <SplitFlashcard flashcard={f} />)}\n            </div>\n        :  \n           <h2 className=\"Flashcards-h2\"> <br/> <br/>No flashcards yet!</h2>}\n\n<button className=\"Set-buttons-practice\">Practice</button>\n        </>\n        \n    )\n}\n\nexport default Set;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG7C,MAAMC,GAAG,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAM;IAAEU,OAAO;IAAEC;EAAY,CAAC,GAAGd,UAAU,CAACI,WAAW,CAAC;EACxD,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,EAAE;EAChC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMkB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAAE,QAAOD,EAAG,EAAC,CAAC;MACxCI,MAAM,CAACI,IAAI,CAACL,GAAG,CAAC;MAChBG,aAAa,CAACE,IAAI,CAACL,GAAG,CAACE,UAAU,CAAC;IACtC,CAAC;IACDE,MAAM,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,oBACIZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,GACCN,GAAG,gBACJR,OAAA;MAAAc,QAAA,eACId,OAAA;QAAKe,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAChBd,OAAA;UAAGe,SAAS,EAAC,UAAU;UAAAD,QAAA,EAAEN,GAAG,CAACQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACtCpB,OAAA;UAAGe,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAEN,GAAG,CAACa;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACpDpB,OAAA;UAAGe,SAAS,EAAC,cAAc;UAAAD,QAAA,GAAC,YAAU,EAACN,GAAG,CAACc,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC3DpB,OAAA;UAAGe,SAAS,EAAC,cAAc;UAAAD,QAAA,GAAC,YAAU,EAACN,GAAG,CAACe,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EAC1DZ,GAAG,CAACgB,SAAS,KAAKjB,WAAW,CAACkB,QAAQ,gBACvCzB,OAAA;UAAKe,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBd,OAAA;YAAAc,QAAA,EAAQ;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACrBpB,OAAA;YAAAc,QAAA,EAAQ;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrB,GACJ,EAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ,gBAENpB,OAAA;MAAIe,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEvCV,UAAU,CAACgB,MAAM,GAAG,CAAC,gBACnB1B,OAAA;MAAKe,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EAC/BJ,UAAU,CAACiB,GAAG,CAACC,CAAC,iBAAI5B,OAAA,CAACF,cAAc;QAAC+B,SAAS,EAAED;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,gBAEPpB,OAAA;MAAIe,SAAS,EAAC,eAAe;MAAAD,QAAA,GAAC,GAAC,eAAAd,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,KAAC,eAAApB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,sBAAkB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAE5EpB,OAAA;MAAQe,SAAS,EAAC,sBAAsB;MAAAD,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC/C;AAGX,CAAC;AAAAhB,EAAA,CAlDKD,GAAG;EAAA,QACUP,SAAS;AAAA;AAAAkC,EAAA,GADtB3B,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}