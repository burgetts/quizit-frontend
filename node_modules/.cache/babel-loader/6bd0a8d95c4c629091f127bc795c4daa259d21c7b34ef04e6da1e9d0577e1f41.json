{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PublicGroups = () => {\n  _s();\n  const {\n    request\n  } = useContext(UserContext);\n  const [groups, setGroups] = useState();\n  useEffect(() => {\n    const getPublicGroups = async () => {\n      console.log('hi!');\n      const resp = await request(`groups`);\n      setGroups(resp.groups);\n    };\n    getPublicGroups();\n  });\n  return (\n    /*#__PURE__*/\n    // SEARCH BAR\n    // MAP PUBLIC GROUPS\n    _jsxDEV(_Fragment, {\n      children: groups ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: groups.map(g => /*#__PURE__*/_jsxDEV(GroupCard, {\n          group: g\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(PublicGroups, \"d0ZFQAZfKN2iDehdW4bYJ5RAqnA=\");\n_c = PublicGroups;\nexport default PublicGroups;\nvar _c;\n$RefreshReg$(_c, \"PublicGroups\");","map":{"version":3,"names":["React","useEffect","useContext","useState","UserContext","GroupCard","jsxDEV","_jsxDEV","Fragment","_Fragment","PublicGroups","_s","request","groups","setGroups","getPublicGroups","console","log","resp","children","map","g","group","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\n\nconst PublicGroups = () => {\n    const { request } = useContext(UserContext)\n    const [groups, setGroups] = useState()\n\n    useEffect(() => {\n        const getPublicGroups = async () => {\n            console.log('hi!')\n            const resp = await request(`groups`)\n            setGroups(resp.groups)\n        }\n        getPublicGroups()\n    })\n    return (\n        // SEARCH BAR\n        // MAP PUBLIC GROUPS\n        <>  \n            {groups \n                    ?\n                    <div>\n                        {groups.map(g => <GroupCard group={g} key={g.id} />)}\n                    </div>\n\n                    : \n                    <h1>Loading...</h1>\n            }\n        </>\n    )\n}\n\nexport default PublicGroups;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,EAAE;EAEtCF,SAAS,CAAC,MAAM;IACZ,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,MAAMC,IAAI,GAAG,MAAMN,OAAO,CAAE,QAAO,CAAC;MACpCE,SAAS,CAACI,IAAI,CAACL,MAAM,CAAC;IAC1B,CAAC;IACDE,eAAe,EAAE;EACrB,CAAC,CAAC;EACF;IAAA;IACI;IACA;IACAR,OAAA,CAAAE,SAAA;MAAAU,QAAA,EACKN,MAAM,gBAECN,OAAA;QAAAY,QAAA,EACKN,MAAM,CAACO,GAAG,CAACC,CAAC,iBAAId,OAAA,CAACF,SAAS;UAACiB,KAAK,EAAED;QAAE,GAAMA,CAAC,CAACE,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClD,gBAGNpB,OAAA;QAAAY,QAAA,EAAI;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;EAE5B;AAEX,CAAC;AAAAhB,EAAA,CA3BKD,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}