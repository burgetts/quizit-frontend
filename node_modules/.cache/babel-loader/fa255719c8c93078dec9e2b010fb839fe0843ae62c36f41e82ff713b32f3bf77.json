{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const [flashcards, setFlashcards] = useState([]);\n  useEffect(() => {\n    const getSet = async () => {\n      const set = await request(`sets/${id}`);\n      setSet(set);\n    };\n    getSet();\n    console.log(set);\n  }, []);\n\n  // get set with that id\n  // informational card on top\n  // map flashcards into cards\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: set ? console.log(set) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"'Loading...'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this)\n  }, void 0, false);\n};\n_s(Set, \"W70ELBe6xdfWs3/UiyHQTXdmEks=\", false, function () {\n  return [useParams];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_s","id","request","set","setSet","flashcards","setFlashcards","getSet","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\n\n\nconst Set =  () => {\n    const { id } = useParams()\n    const { request } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const [flashcards, setFlashcards] = useState([])\n\n    useEffect(() => {\n        const getSet = async () => {\n            const set = await request(`sets/${id}`)\n            setSet(set)\n        }\n        getSet()\n        console.log(set)\n    }, [])\n  \n    \n\n    // get set with that id\n    // informational card on top\n    // map flashcards into cards\n    return (\n        <>\n            {set ? console.log(set) : <h1>'Loading...'</h1>}\n\n        </>\n    )\n}\n\nexport default Set;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,GAAG,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAC1B,MAAM;IAAES;EAAQ,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EAC3C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,EAAE;EAChC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMJ,GAAG,GAAG,MAAMD,OAAO,CAAE,QAAOD,EAAG,EAAC,CAAC;MACvCG,MAAM,CAACD,GAAG,CAAC;IACf,CAAC;IACDI,MAAM,EAAE;IACRC,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAIN;EACA;EACA;EACA,oBACIP,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACKP,GAAG,GAAGK,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC,gBAAGP,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBAEhD;AAEX,CAAC;AAAAd,EAAA,CA1BKD,GAAG;EAAA,QACUN,SAAS;AAAA;AAAAsB,EAAA,GADtBhB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}