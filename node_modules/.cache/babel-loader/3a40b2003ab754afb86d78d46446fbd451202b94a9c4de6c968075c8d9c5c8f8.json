{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\nimport Post from './Post';\nimport NewPostForm from './NewPostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupPosts = _ref => {\n  _s();\n  let {\n    groupId\n  } = _ref;\n  const {\n    request\n  } = useContext(UserContext);\n  const [posts, setPosts] = useState();\n\n  // get all group posts on load\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await request(`groups/${groupId}/posts`);\n      const posts = resp.posts;\n      setPosts(posts);\n    };\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewPostForm, {\n      groupId: groupId,\n      setPosts: setPosts,\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), posts ? posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n      post: p,\n      setPosts: setPosts,\n      posts: posts,\n      groupId: groupId\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No posts yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(GroupPosts, \"HRL0TeA71EWwM2O4W0E5uRPnYoQ=\");\n_c = GroupPosts;\nexport default GroupPosts;\nvar _c;\n$RefreshReg$(_c, \"GroupPosts\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","Post","NewPostForm","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupPosts","_ref","_s","groupId","request","posts","setPosts","getPosts","resp","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","post","id","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupPosts.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\nimport Post from './Post';\nimport NewPostForm from './NewPostForm';\n\nconst GroupPosts = ({groupId}) => {\n    const { request } = useContext(UserContext)\n    const [posts, setPosts] = useState()\n\n    // get all group posts on load\n    useEffect(() => {\n        const getPosts = async () => {\n            const resp = await request(`groups/${groupId}/posts`)\n            const posts = resp.posts\n            setPosts(posts)\n        }\n        getPosts()\n    }, [])\n    return (\n        <>\n            <NewPostForm groupId={groupId} setPosts={setPosts} posts={posts} />\n            {posts \n                ?\n                posts.map(p => <Post key={p.id} post={p} setPosts={setPosts} posts={posts} groupId={groupId} />)\n                :\n                <h1>No posts yet!</h1>\n            }\n        </>\n    )\n}\n\nexport default GroupPosts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,UAAU,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM;IAAEG;EAAQ,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,EAAE;;EAEpC;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAAE,UAASD,OAAQ,QAAO,CAAC;MACrD,MAAME,KAAK,GAAGG,IAAI,CAACH,KAAK;MACxBC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC;IACDE,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EACN,oBACIV,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA,CAACF,WAAW;MAACQ,OAAO,EAAEA,OAAQ;MAACG,QAAQ,EAAEA,QAAS;MAACD,KAAK,EAAEA;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAClER,KAAK,GAEFA,KAAK,CAACS,GAAG,CAACC,CAAC,iBAAIlB,OAAA,CAACH,IAAI;MAAYsB,IAAI,EAAED,CAAE;MAACT,QAAQ,EAAEA,QAAS;MAACD,KAAK,EAAEA,KAAM;MAACF,OAAO,EAAEA;IAAQ,GAAlEY,CAAC,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAiE,CAAC,gBAEhGhB,OAAA;MAAAY,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,gBAE3B;AAEX,CAAC;AAAAX,EAAA,CAxBKF,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AA0BhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}