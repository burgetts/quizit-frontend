{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\nimport ReactCardFlip from \"react-card-flip\";\n\n// const FlashcardPractice = () => {\n//     const { id } = useParams()\n//     const { request } = useContext(UserContext)\n//     const [set, setSet] = useState()\n//     const [flashcards, setFlashcards] = useState([])\n//     const [currentFlashcard, setCurrentFlashcard] = useState(null)\n//     const [currentSide, setCurrentSide] = useState(1)\n\n//     // get set and flashcards on load\n//     useEffect(() => {\n//         const getSet = async () => {\n//             const resp = await request(`sets/${id}`)\n//             setSet(resp.set)  \n//             setFlashcards(resp.set.flashcards)\n//             if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0])\n//         }\n//         getSet()\n//     }, [])\n\n//     return (\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FlashcardPractice() {\n  _s();\n  const [flip, setFlip] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: set && flashcards ? /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: flip,\n      flipDirection: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideOne\",\n        onClick: () => setFlip(!flip),\n        children: \"Welcome to GFG.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideTwo\",\n        onClick: () => setFlip(!flip),\n        children: \"Computer Science Portal.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Flashcard-h1\",\n      children: \"Loading set...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n_s(FlashcardPractice, \"VEQqzcgmRpvpSkLfq3URr/rX57U=\");\n_c = FlashcardPractice;\nexport default FlashcardPractice;\n\n// <> \n// {set && flashcards ? \n// <div>\n//     <h1>{set.name}</h1>\n//     <h2>{set.description}</h2>\n//     <div className=\"Flashcard-outer\">\n//         <div className=\"Flashcard-inner\">\n//             <div className=\"Flashcard\">\n//                 <div className=\"Flashcard-side-one\">\n//                     {currentFlashcard.sideOneImageUrl !== '' ? \n//                     <img src={currentFlashcard.sideOneImageUrl}></img>\n//                     : ''}\n//                     <p className=\"Flashcard-text\">{currentFlashcard.sideOneText}</p>\n//                 </div>\n\n//                 <div className=\"Flashcard-side-two\">\n//                     <p className=\"Flashcard-text\">{currentFlashcard.sideTwoText}</p>\n//                 </div>\n//             </div>\n//         </div>\n//      </div>\n// </div> \n//     :\n//     <h1 className=\"Flashcard-h1\">Loading set...</h1>\n//     } \n// </>\n//     )\n// }\n\n// export default FlashcardPractice;\nvar _c;\n$RefreshReg$(_c, \"FlashcardPractice\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","UserContext","ReactCardFlip","jsxDEV","_jsxDEV","Fragment","_Fragment","FlashcardPractice","_s","flip","setFlip","children","set","flashcards","isFlipped","flipDirection","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/FlashcardPractice.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/Flashcard.css';\nimport ReactCardFlip from \"react-card-flip\";\n\n// const FlashcardPractice = () => {\n//     const { id } = useParams()\n//     const { request } = useContext(UserContext)\n//     const [set, setSet] = useState()\n//     const [flashcards, setFlashcards] = useState([])\n//     const [currentFlashcard, setCurrentFlashcard] = useState(null)\n//     const [currentSide, setCurrentSide] = useState(1)\n\n//     // get set and flashcards on load\n//     useEffect(() => {\n//         const getSet = async () => {\n//             const resp = await request(`sets/${id}`)\n//             setSet(resp.set)  \n//             setFlashcards(resp.set.flashcards)\n//             if (resp.set.flashcards.length > 0) setCurrentFlashcard(resp.set.flashcards[0])\n//         }\n//         getSet()\n//     }, [])\n\n  \n\n   \n//     return (\n   \n\n\nfunction FlashcardPractice() {\n\tconst [flip, setFlip] = useState(false);\n\n\treturn (\n        <>\n            {set && flashcards ?\n\t\t    <ReactCardFlip isFlipped={flip}flipDirection=\"vertical\">\n\t\t\t    <div className=\"sideOne\" onClick={() => setFlip(!flip)}>\n\t\t\t\t    Welcome to GFG.\n\t\t\t    </div>\n\n\t\t\t    <div className=\"sideTwo\" onClick={() => setFlip(!flip)}>\n\t\t\t\t    Computer Science Portal.\n\t\t\t    </div>\n\t\t    </ReactCardFlip>\n            : <h1 className=\"Flashcard-h1\">Loading set...</h1>}   \n        </>\n\t);\n}\n\nexport default FlashcardPractice;\n\n        // <> \n        // {set && flashcards ? \n        // <div>\n        //     <h1>{set.name}</h1>\n        //     <h2>{set.description}</h2>\n        //     <div className=\"Flashcard-outer\">\n        //         <div className=\"Flashcard-inner\">\n        //             <div className=\"Flashcard\">\n        //                 <div className=\"Flashcard-side-one\">\n        //                     {currentFlashcard.sideOneImageUrl !== '' ? \n        //                     <img src={currentFlashcard.sideOneImageUrl}></img>\n        //                     : ''}\n        //                     <p className=\"Flashcard-text\">{currentFlashcard.sideOneText}</p>\n        //                 </div>\n\n        //                 <div className=\"Flashcard-side-two\">\n        //                     <p className=\"Flashcard-text\">{currentFlashcard.sideTwoText}</p>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //      </div>\n        // </div> \n        //     :\n        //     <h1 className=\"Flashcard-h1\">Loading set...</h1>\n        //     } \n        // </>\n//     )\n// }\n\n// export default FlashcardPractice;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAO,sBAAsB;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvC,oBACOK,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACKC,GAAG,IAAIC,UAAU,gBACxBT,OAAA,CAACF,aAAa;MAACY,SAAS,EAAEL,IAAK;MAAAM,aAAa,EAAC,UAAU;MAAAJ,QAAA,gBACtDP,OAAA;QAAKY,SAAS,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMP,OAAO,CAAC,CAACD,IAAI,CAAE;QAAAE,QAAA,EAAC;MAExD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAENjB,OAAA;QAAKY,SAAS,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMP,OAAO,CAAC,CAACD,IAAI,CAAE;QAAAE,QAAA,EAAC;MAExD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACS,gBACRjB,OAAA;MAAIY,SAAS,EAAC,cAAc;MAAAL,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBACnD;AAEX;AAACb,EAAA,CAlBQD,iBAAiB;AAAAe,EAAA,GAAjBf,iBAAiB;AAoB1B,eAAeA,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;;AAEA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}