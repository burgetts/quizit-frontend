{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PublicGroups = _ref => {\n  _s();\n  let {\n    searchTerm,\n    setSearchTerm\n  } = _ref;\n  const {\n    request\n  } = useContext(UserContext);\n  const [groups, setGroups] = useState();\n  const [showingGroups, setShowingGroups] = useState([]);\n  useEffect(() => {\n    const getPublicGroups = async () => {\n      console.log('hi!');\n      const resp = await request(`groups`);\n      setGroups(resp.groups);\n    };\n    getPublicGroups();\n  }, []);\n  useEffect(() => {\n    if (groups) {\n      const groupsToShow = groups.filter(s => s.name.toLowerCase().startsWith(searchTerm.toLowerCase()));\n      setShowingGroups(groupsToShow);\n    }\n  }, [searchTerm]);\n  return (\n    /*#__PURE__*/\n    // SEARCH BAR\n    // MAP PUBLIC GROUPS\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        text: \"Search groups by name\",\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), groups ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showingGroups.map(g => /*#__PURE__*/_jsxDEV(GroupCard, {\n          group: g\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(PublicGroups, \"5CyV9xH8rHz7Jw8XgU8ScvJiSKM=\");\n_c = PublicGroups;\nexport default PublicGroups;\nvar _c;\n$RefreshReg$(_c, \"PublicGroups\");","map":{"version":3,"names":["React","useEffect","useContext","useState","UserContext","GroupCard","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","PublicGroups","_ref","_s","searchTerm","setSearchTerm","request","groups","setGroups","showingGroups","setShowingGroups","getPublicGroups","console","log","resp","groupsToShow","filter","s","name","toLowerCase","startsWith","children","text","fileName","_jsxFileName","lineNumber","columnNumber","map","g","group","id","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/PublicGroups.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport GroupCard from './GroupCard';\nimport Search from './Search';\n\nconst PublicGroups = ({searchTerm, setSearchTerm}) => {\n    const { request } = useContext(UserContext)\n    const [groups, setGroups] = useState()\n    const [showingGroups, setShowingGroups] = useState([])\n\n    useEffect(() => {\n        const getPublicGroups = async () => {\n            console.log('hi!')\n            const resp = await request(`groups`)\n            setGroups(resp.groups)\n        }\n        getPublicGroups()\n    }, [])\n\n    useEffect(() => {\n        if (groups) {\n            const groupsToShow = groups.filter(s => s.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\n            setShowingGroups(groupsToShow)\n        }\n    }, [searchTerm])\n    return (\n        // SEARCH BAR\n\n        // MAP PUBLIC GROUPS\n        <>  \n            <Search text=\"Search groups by name\" setSearchTerm={setSearchTerm} />\n            {groups \n                    ?\n                    <div>\n                        {showingGroups.map(g => <GroupCard group={g} key={g.id} />)}\n                    </div>\n\n                    : \n                    <h1>Loading...</h1>\n            }\n        </>\n    )\n}\n\nexport default PublicGroups;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,YAAY,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAACC,UAAU;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC7C,MAAM;IAAEI;EAAQ,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,EAAE;EACtC,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtDF,SAAS,CAAC,MAAM;IACZ,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAAE,QAAO,CAAC;MACpCE,SAAS,CAACM,IAAI,CAACP,MAAM,CAAC;IAC1B,CAAC;IACDI,eAAe,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZ,IAAIgB,MAAM,EAAE;MACR,MAAMQ,YAAY,GAAGR,MAAM,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,UAAU,CAAChB,UAAU,CAACe,WAAW,EAAE,CAAC,CAAC;MAClGT,gBAAgB,CAACK,YAAY,CAAC;IAClC;EACJ,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAChB;IAAA;IACI;IAEA;IACAN,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACIvB,OAAA,CAACF,MAAM;QAAC0B,IAAI,EAAC,uBAAuB;QAACjB,aAAa,EAAEA;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACpEnB,MAAM,gBAECT,OAAA;QAAAuB,QAAA,EACKZ,aAAa,CAACkB,GAAG,CAACC,CAAC,iBAAI9B,OAAA,CAACH,SAAS;UAACkC,KAAK,EAAED;QAAE,GAAMA,CAAC,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzD,gBAGN5B,OAAA;QAAAuB,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;EAE5B;AAEX,CAAC;AAAAvB,EAAA,CArCKF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}