{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request\n  } = useContext(UserContext);\n  const getSet = async id => {\n    const set = await request(`sets/${id}`);\n    return set;\n  };\n  const set = getSet(id);\n  // get set with that id\n  // informational card on top\n  // map flashcards into cards\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), console.log(set)]\n  }, void 0, true);\n};\n_s(Set, \"4Tk27+Ht1BjDJl3aQMnrUpY+NWQ=\", false, function () {\n  return [useParams];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useParams","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_s","id","request","getSet","set","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\n\n\nconst Set =  () => {\n    const { id } = useParams()\n    const { request } = useContext(UserContext)\n\n    const getSet = async (id) => {\n        const set = await request(`sets/${id}`)\n        return set\n    }\n    \n    const set = getSet(id)\n    // get set with that id\n    // informational card on top\n    // map flashcards into cards\n    return (\n        <>\n        <h1> {id} </h1>\n        {console.log(set)}\n        </>\n    )\n}\n\nexport default Set;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,GAAG,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAC1B,MAAM;IAAES;EAAQ,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAE3C,MAAMS,MAAM,GAAG,MAAOF,EAAE,IAAK;IACzB,MAAMG,GAAG,GAAG,MAAMF,OAAO,CAAE,QAAOD,EAAG,EAAC,CAAC;IACvC,OAAOG,GAAG;EACd,CAAC;EAED,MAAMA,GAAG,GAAGD,MAAM,CAACF,EAAE,CAAC;EACtB;EACA;EACA;EACA,oBACIL,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA;MAAAS,QAAA,GAAI,GAAC,EAACJ,EAAE,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACdC,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAAA,gBACd;AAEX,CAAC;AAAAJ,EAAA,CAnBKD,GAAG;EAAA,QACUN,SAAS;AAAA;AAAAmB,EAAA,GADtBb,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}