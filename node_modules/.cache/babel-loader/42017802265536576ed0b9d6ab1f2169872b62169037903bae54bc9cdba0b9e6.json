{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupPosts = _ref => {\n  _s();\n  let {\n    groupId\n  } = _ref;\n  const {\n    request\n  } = useContext(UserContext);\n  const [posts, setPosts] = useState();\n  // get all group posts on load\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await request(`groups/${groupId}/posts`);\n      const posts = resp.posts;\n      setPosts(posts);\n      console.log(resp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts ? posts.map(p => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: p.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 32\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No posts yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false)\n  // New post form\n  // map all existing posts\n  // map all repliest to an existing post\n  ;\n};\n_s(GroupPosts, \"HRL0TeA71EWwM2O4W0E5uRPnYoQ=\");\n_c = GroupPosts;\nexport default GroupPosts;\nvar _c;\n$RefreshReg$(_c, \"GroupPosts\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupPosts","_ref","_s","groupId","request","posts","setPosts","getPosts","resp","console","log","children","map","p","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/GroupPosts.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\n\nconst GroupPosts = ({groupId}) => {\n    const { request } = useContext(UserContext)\n    const [posts, setPosts] = useState()\n    // get all group posts on load\n    useEffect(() => {\n        const getPosts = async () => {\n            const resp = await request(`groups/${groupId}/posts`)\n            const posts = resp.posts\n            setPosts(posts)\n            console.log(resp)\n        }\n            \n    }, [])\n    return (\n        <>\n            {posts \n                ?\n                posts.map(p => <h1>{p.text}</h1>)\n                :\n                <h1>No posts yet!</h1>\n            }\n        </>\n        // New post form\n        // map all existing posts\n            // map all repliest to an existing post\n    )\n}\n\nexport default GroupPosts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,UAAU,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM;IAAEG;EAAQ,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,EAAE;EACpC;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAAE,UAASD,OAAQ,QAAO,CAAC;MACrD,MAAME,KAAK,GAAGG,IAAI,CAACH,KAAK;MACxBC,QAAQ,CAACD,KAAK,CAAC;MACfI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EACN,oBACIX,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACKN,KAAK,GAEFA,KAAK,CAACO,GAAG,CAACC,CAAC,iBAAIhB,OAAA;MAAAc,QAAA,EAAKE,CAAC,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,CAAC,gBAEjCrB,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;EAG9B;EACA;EACI;EAAA;AAEZ,CAAC;AAAAhB,EAAA,CA1BKF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}