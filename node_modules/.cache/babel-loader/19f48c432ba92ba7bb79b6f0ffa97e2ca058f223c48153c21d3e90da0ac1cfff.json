{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/UserSets.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/UserSets.css';\nimport SetCard from './SetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserSets = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const sets = currentUser.sets;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewSetCard\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"sets/new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NewSetButton\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"NewSetText\",\n          children: \"Create a new set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"NoNewSets\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"No sets yet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 38\n      }, this) : sets.map(s => /*#__PURE__*/_jsxDEV(SetCard, {\n        className: \"SetCard\",\n        set: s\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)\n  // create new set card\n  // links to create new set form\n  // allows user to create set\n\n  // get user sets\n  // put them into a SetCard?\n  // show all\n  ;\n};\n_s(UserSets, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n_c = UserSets;\nexport default UserSets;\nvar _c;\n$RefreshReg$(_c, \"UserSets\");","map":{"version":3,"names":["React","useContext","NavLink","UserContext","SetCard","jsxDEV","_jsxDEV","Fragment","_Fragment","UserSets","_s","currentUser","sets","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","length","map","s","set","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/UserSets.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport '../css/UserSets.css';\nimport SetCard from './SetCard';\n\nconst UserSets = () => {\n    const { currentUser } = useContext(UserContext)\n    const sets = currentUser.sets\n    \n    \n    return (\n        <>\n            <div className=\"NewSetCard\">\n                <NavLink to=\"sets/new\">\n                    <button className=\"NewSetButton\">+</button>\n                    <p className=\"NewSetText\">Create a new set</p>\n                </NavLink>\n            </div>\n            <div>\n                {sets.length === 0 ? <p className=\"NoNewSets\"><i>No sets yet!</i></p>\n                :\n                sets.map(s => <SetCard className=\"SetCard\" set={s} />)}\n            </div>\n        </>\n        // create new set card\n        // links to create new set form\n        // allows user to create set\n\n        // get user sets\n        // put them into a SetCard?\n        // show all\n       \n    )\n}\n\nexport default UserSets;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAO,qBAAqB;AAC5B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAY,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAMS,IAAI,GAAGD,WAAW,CAACC,IAAI;EAG7B,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAD,QAAA,eACvBP,OAAA,CAACJ,OAAO;QAACa,EAAE,EAAC,UAAU;QAAAF,QAAA,gBAClBP,OAAA;UAAQQ,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC3Cb,OAAA;UAAGQ,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACxC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNb,OAAA;MAAAO,QAAA,EACKD,IAAI,CAACQ,MAAM,KAAK,CAAC,gBAAGd,OAAA;QAAGQ,SAAS,EAAC,WAAW;QAAAD,QAAA,eAACP,OAAA;UAAAO,QAAA,EAAG;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,GAErEP,IAAI,CAACS,GAAG,CAACC,CAAC,iBAAIhB,OAAA,CAACF,OAAO;QAACU,SAAS,EAAC,SAAS;QAACS,GAAG,EAAED;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD;EAAA;EAEV;EACA;EACA;;EAEA;EACA;EACA;EAAA;AAGR,CAAC;AAAAT,EAAA,CA5BKD,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}