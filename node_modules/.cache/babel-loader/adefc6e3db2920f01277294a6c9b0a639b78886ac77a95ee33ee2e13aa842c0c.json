{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\nimport Reply from './Reply';\nimport NewPostReply from './NewPostReply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    post,\n    groupId,\n    posts,\n    setPosts\n  } = _ref;\n  const {\n    currentUser,\n    request\n  } = useContext(UserContext);\n  const [editMode, setEditMode] = useState(false);\n  const [replies, setReplies] = useState();\n  const [newReplyMode, setNewReplyMode] = useState(false);\n  const INITIAL_STATE = {\n    text: post.text\n  };\n  const [formData, handleChange] = useFields(INITIAL_STATE);\n  const deletePost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\");\n    const remainingPosts = posts.filter(p => p.id !== post.id);\n    setPosts(remainingPosts);\n  };\n  const editPost = async () => {\n    await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\");\n    const resp = await request(`groups/${groupId}/posts`);\n    const newPosts = resp.posts;\n    setPosts(newPosts);\n    setEditMode(!editMode);\n  };\n\n  // get a post's replies and map them into a reply component\n  useEffect(() => {\n    const getReplies = async () => {\n      const resp = await request(`groups/${groupId}/posts/${post.id}/replies`);\n      const replies = resp.replies;\n      setReplies(replies);\n    };\n    getReplies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-posted-by\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.postedBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-date-posted\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.datePosted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-text\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.text,\n          name: \"text\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-text\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), post.postedBy === currentUser.username ? editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-save-changes-button\",\n          onClick: editPost,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-cancel-changes-button\",\n          onClick: () => setEditMode(!editMode),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-edit-button\",\n          onClick: () => setEditMode(!editMode),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Post-delete-button\",\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-reply-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNewReplyMode(!newReplyMode),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), replies && replies.length > 0 && replies.map(r => /*#__PURE__*/_jsxDEV(Reply, {\n      reply: r,\n      groupId: groupId,\n      setReplies: setReplies,\n      replies: replies,\n      postId: post.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 60\n    }, this)), /*#__PURE__*/_jsxDEV(NewPostReply, {\n      newReplyMode: newReplyMode,\n      setNewReplyMode: setNewReplyMode,\n      replies: replies,\n      setReplies: setReplies,\n      groupId: groupId,\n      postId: post.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Post, \"bEU1wbegwrngAXmkKErVCKeYmGM=\", false, function () {\n  return [useFields];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useContext","useState","useEffect","UserContext","useFields","Reply","NewPostReply","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_ref","_s","post","groupId","posts","setPosts","currentUser","request","editMode","setEditMode","replies","setReplies","newReplyMode","setNewReplyMode","INITIAL_STATE","text","formData","handleChange","deletePost","id","remainingPosts","filter","p","editPost","resp","newPosts","getReplies","children","className","postedBy","fileName","_jsxFileName","lineNumber","columnNumber","datePosted","value","name","onChange","username","onClick","length","map","r","reply","postId","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Post.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport '../css/Post.css';\nimport UserContext from '../utils/UserContext';\nimport { useFields } from '../utils/hooks';\nimport Reply from './Reply';\nimport NewPostReply from './NewPostReply';\n\n\nconst Post = ({post, groupId, posts, setPosts}) => {\n    const { currentUser, request } = useContext(UserContext)\n    const [editMode, setEditMode] = useState(false)\n    const [replies, setReplies] = useState()\n    const [newReplyMode, setNewReplyMode] = useState(false)\n    \n    const INITIAL_STATE = {\n        text: post.text\n    }\n    const [formData, handleChange] =  useFields(INITIAL_STATE)\n    const deletePost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, {}, \"delete\")\n        const remainingPosts = posts.filter(p => p.id !== post.id)\n        setPosts(remainingPosts)\n    }\n\n    const editPost = async () => {\n        await request(`groups/${groupId}/posts/${post.id}`, formData, \"patch\")\n        const resp = await request(`groups/${groupId}/posts`)\n        const newPosts = resp.posts\n        setPosts(newPosts)\n        setEditMode(!editMode)\n    }\n\n    // get a post's replies and map them into a reply component\n    useEffect(() => {\n        const getReplies = async () => {\n            const resp = await request(`groups/${groupId}/posts/${post.id}/replies`)\n            const replies = resp.replies\n            setReplies(replies)\n        }\n        getReplies()\n    }, [])\n\n    return (\n        <>\n        <div className=\"Post\">\n            <div className=\"Post-posted-by\">\n                <div>{post.postedBy}</div>\n            </div>\n            <div className=\"Post-date-posted\">\n                <div >{post.datePosted}</div>\n            </div>\n    \n            {editMode \n                ?\n                <div className=\"Post-text\">\n                    <textarea value={formData.text} name=\"text\" onChange={handleChange}></textarea>\n                </div>\n                :\n                <div className=\"Post-text\">\n                    <div>{post.text}</div>\n                </div>\n            }\n\n            {post.postedBy === currentUser.username \n                ?\n                editMode \n                    ?\n                    <div>\n                        <button className=\"Post-save-changes-button\" onClick={editPost}>Save Changes</button>\n                        <button className=\"Post-cancel-changes-button\" onClick={() => setEditMode(!editMode)}>Cancel</button>\n                    </div>\n                    :\n                    <div>\n                        <button className=\"Post-edit-button\" onClick={() => setEditMode(!editMode)}>Edit</button>\n                        <button className=\"Post-delete-button\" onClick={deletePost}>Delete</button>\n                    </div>\n                :\n                <div className=\"Post-reply-button\">\n                    <button onClick={() => setNewReplyMode(!newReplyMode)}>Reply</button>\n                </div>\n            }\n\n            \n        </div>\n        \n        {replies && replies.length > 0 && replies.map(r => <Reply reply={r} groupId={groupId} setReplies={setReplies} replies={replies} postId={post.id} />)}\n        <NewPostReply newReplyMode={newReplyMode} setNewReplyMode={setNewReplyMode} replies={replies} setReplies={setReplies} groupId={groupId} postId={post.id} />\n        </>\n    )\n}\n\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}