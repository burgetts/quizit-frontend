{"ast":null,"code":"var _jsxFileName = \"/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Set = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    request,\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [set, setSet] = useState();\n  const navigate = useNavigate();\n  const [flashcards, setFlashcards] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n\n  // get set data on load\n  useEffect(() => {\n    const getSet = async () => {\n      const resp = await request(`sets/${id}`);\n      setSet(resp.set);\n      setFlashcards(resp.set.flashcards);\n    };\n    getSet();\n  }, []);\n\n  // edit set\n\n  const deleteSet = async () => {\n    await request(`sets/${id}`, {}, 'delete');\n    const user = await request(`users/${currentUser.username}`);\n    setCurrentUser(user.user);\n    navigate(`/flashcards`);\n  };\n\n  // add flashcard\n  // practice\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [set ? !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Set\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-name\",\n          children: set.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Set-description\",\n          children: set.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), set.createdBy === currentUser.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Set-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: deleteSet,\n            children: \"Delete Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this) : 'Editing set...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this) : '' : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Set-h1\",\n      children: \" Loading set \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), flashcards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flashcard-container\",\n      children: flashcards.map(f => /*#__PURE__*/_jsxDEV(SplitFlashcard, {\n        flashcard: f,\n        flashcards: flashcards,\n        sideOneName: set.sideOneName,\n        sideTwoName: set.sideTwoName,\n        setFlashcards: setFlashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Flashcards-h2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 49\n      }, this), \"No flashcards yet!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-practice\",\n      children: \"Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Set-buttons-add-flashcard\",\n      children: \"Add Flashcard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Set, \"RBanzZSsqDq8DhDqWdqrhyp4OIM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Set;\nexport default Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useNavigate","UserContext","SplitFlashcard","jsxDEV","_jsxDEV","Fragment","_Fragment","Set","_s","id","request","currentUser","setCurrentUser","set","setSet","navigate","flashcards","setFlashcards","editMode","setEditMode","getSet","resp","deleteSet","user","username","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","description","createdBy","onClick","length","map","f","flashcard","sideOneName","sideTwoName","_c","$RefreshReg$"],"sources":["/Users/stevieburgett/Documents/Springboard/capstone-2/frontend/quizit/src/components/Set.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\nimport \"../css/Set.css\";\nimport SplitFlashcard from './SplitFlashcard'\n\n\nconst Set =  () => {\n    const { id } = useParams()\n    const { request, currentUser, setCurrentUser } = useContext(UserContext)\n    const [set, setSet] = useState()\n    const navigate = useNavigate()\n    const [flashcards, setFlashcards] = useState([])\n    const [editMode, setEditMode] = useState(false)\n\n    // get set data on load\n    useEffect(() => {\n        const getSet = async () => {\n            const resp = await request(`sets/${id}`)\n            setSet(resp.set)\n            setFlashcards(resp.set.flashcards)\n        }\n        getSet()\n    }, [])\n  \n    // edit set\n   \n    const deleteSet = async () => {\n        await request(`sets/${id}`, {}, 'delete')\n        const user = await request(`users/${currentUser.username}`)\n        setCurrentUser(user.user)\n        navigate(`/flashcards`)\n    }\n\n    // add flashcard\n    // practice\n\n    return (\n        <>\n        {set ? \n         !editMode ? <div>\n            <div className=\"Set\">\n                <p className=\"Set-name\">{set.name}</p>\n                <p className=\"Set-description\">{set.description}</p>\n                {set.createdBy === currentUser.username? \n                <div className=\"Set-buttons\">\n                    <button>Edit Set</button>\n                    <button className=\"delete-button\" onClick={deleteSet}>Delete Set</button>\n                </div>\n                : 'Editing set...' }\n            </div>\n        </div>\n        : ''\n        : \n        <h1 className=\"Set-h1\"> Loading set </h1> }\n\n        { flashcards.length > 0 ? \n            <div className=\"Flashcard-container\">\n                {flashcards.map(f => <SplitFlashcard flashcard={f} flashcards={flashcards} sideOneName={set.sideOneName} sideTwoName={set.sideTwoName} setFlashcards={setFlashcards}/>)}\n            </div>\n        :  \n           <h2 className=\"Flashcards-h2\"> <br/> <br/>No flashcards yet!</h2>}\n\n        <button className=\"Set-buttons-practice\">Practice</button>\n        <button className=\"Set-buttons-add-flashcard\">Add Flashcard</button>\n        </>\n        \n    )\n}\n\nexport default Set;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}